<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="155" passed="142" failed="13" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-05-28T07:47:41 WIB" name="APISuite" finished-at="2020-05-28T07:53:43 WIB" duration-ms="362324">
    <groups>
    </groups>
    <test started-at="2020-05-28T07:47:41 WIB" name="APITest" finished-at="2020-05-28T07:53:43 WIB" duration-ms="362324">
      <class name="com.api.testcases.TS_006_InsertPayment">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:50:48 WIB" name="setUp" finished-at="2020-05-28T07:50:48 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="firstLogMessage()[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:50:48 WIB" name="firstLogMessage" finished-at="2020-05-28T07:50:48 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstLogMessage -->
        <test-method signature="createBillData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:50:48 WIB" name="createBillData" data-provider="createBill-data" finished-at="2020-05-28T07:50:50 WIB" duration-ms="1592" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ridwan Remin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[02111111111]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[May]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[75000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[unpaid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillData -->
        <test-method signature="createBillData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:50:50 WIB" name="createBillData" data-provider="createBill-data" finished-at="2020-05-28T07:50:52 WIB" duration-ms="1727" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Dodit Mulyanto]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[02122222222]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[May]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[75000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[unpaid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillData -->
        <test-method signature="createBillData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:50:52 WIB" name="createBillData" data-provider="createBill-data" finished-at="2020-05-28T07:50:53 WIB" duration-ms="1385" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Raditya Dika]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[02133333333]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[May]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[75000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[unpaid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillData -->
        <test-method signature="createBillData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:50:53 WIB" name="createBillData" data-provider="createBill-data" finished-at="2020-05-28T07:50:55 WIB" duration-ms="1666" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bintang Emon]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[02144444444]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[May]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[75000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[unpaid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillData -->
        <test-method signature="createBillData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:50:55 WIB" name="createBillData" data-provider="createBill-data" finished-at="2020-05-28T07:50:56 WIB" duration-ms="1441" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Fico fahriza]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[02155555555]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[May]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[75000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[unpaid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillData -->
        <test-method signature="createBillData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:50:56 WIB" name="createBillData" data-provider="createBill-data" finished-at="2020-05-28T07:50:58 WIB" duration-ms="1479" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Yuda Aldiansyah]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[02166666666]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[May]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[75000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[unpaid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillData -->
        <test-method signature="insertPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:50:58 WIB" name="insertPaymentTest" data-provider="getInsertPayment-data" finished-at="2020-05-28T07:51:01 WIB" depends-on-methods="com.api.testcases.TS_006_InsertPayment.createBillData" duration-ms="3351" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_084]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Insert Payment API with positive test path (pay with wallet balance)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02111111111]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1000000]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[201]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Payment Pending]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertPaymentTest -->
        <test-method signature="insertPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:51:01 WIB" name="insertPaymentTest" data-provider="getInsertPayment-data" finished-at="2020-05-28T07:51:04 WIB" depends-on-methods="com.api.testcases.TS_006_InsertPayment.createBillData" duration-ms="3065" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_085]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Insert Payment API with positive test path (pay with wallet bank transfer)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02122222222]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1000000]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[201]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Payment Pending]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertPaymentTest -->
        <test-method signature="insertPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:51:04 WIB" name="insertPaymentTest" data-provider="getInsertPayment-data" finished-at="2020-05-28T07:51:07 WIB" depends-on-methods="com.api.testcases.TS_006_InsertPayment.createBillData" duration-ms="3026" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_086]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Insert Payment API with unrecognized payment method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02133333333]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[500]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1000000]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Payment method not found]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertPaymentTest -->
        <test-method signature="insertPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:51:07 WIB" name="insertPaymentTest" data-provider="getInsertPayment-data" finished-at="2020-05-28T07:51:11 WIB" depends-on-methods="com.api.testcases.TS_006_InsertPayment.createBillData" duration-ms="3646" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_087]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Insert Payment API with unregistered bill]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1000000]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Bill not found]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertPaymentTest -->
        <test-method signature="insertPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:51:11 WIB" name="insertPaymentTest" data-provider="getInsertPayment-data" finished-at="2020-05-28T07:51:13 WIB" depends-on-methods="com.api.testcases.TS_006_InsertPayment.createBillData" duration-ms="1599" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_088]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Insert Payment API with unregistered user]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02133333333]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1000000]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[User not found]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertPaymentTest -->
        <test-method signature="insertPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:51:13 WIB" name="insertPaymentTest" data-provider="getInsertPayment-data" finished-at="2020-05-28T07:51:16 WIB" depends-on-methods="com.api.testcases.TS_006_InsertPayment.createBillData" duration-ms="3072" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_089]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Insert Payment API if user already insert payment (method : wallet balance)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02111111111]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1000000]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Pay your bill to finish the transaction]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Response body doesn't match expectation.
Expected: a string containing "Pay your bill to finish the transaction"
  Actual: [data:[:], message:Pay your bill to finish the transaction, status:403]
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Response body doesn't match expectation.
Expected: a string containing "Pay your bill to finish the transaction"
  Actual: [data:[:], message:Pay your bill to finish the transaction, status:403]

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:494)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
at jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:97)
at io.restassured.internal.ValidatableResponseOptionsImpl.content(ValidatableResponseOptionsImpl.java:89)
at com.api.testcases.TS_006_InsertPayment.insertPaymentTest(TS_006_InsertPayment.java:119)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertPaymentTest -->
        <test-method signature="insertPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:51:16 WIB" name="insertPaymentTest" data-provider="getInsertPayment-data" finished-at="2020-05-28T07:51:19 WIB" depends-on-methods="com.api.testcases.TS_006_InsertPayment.createBillData" duration-ms="3068" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_090]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Insert Payment API if user already insert payment (method : bank transfer)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02122222222]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1000000]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Pay your bill to finish the transaction]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Response body doesn't match expectation.
Expected: a string containing "Pay your bill to finish the transaction"
  Actual: [data:[:], message:Pay your bill to finish the transaction, status:403]
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Response body doesn't match expectation.
Expected: a string containing "Pay your bill to finish the transaction"
  Actual: [data:[:], message:Pay your bill to finish the transaction, status:403]

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:494)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
at jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:97)
at io.restassured.internal.ValidatableResponseOptionsImpl.content(ValidatableResponseOptionsImpl.java:89)
at com.api.testcases.TS_006_InsertPayment.insertPaymentTest(TS_006_InsertPayment.java:119)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertPaymentTest -->
        <test-method signature="insertPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:51:19 WIB" name="insertPaymentTest" data-provider="getInsertPayment-data" finished-at="2020-05-28T07:51:22 WIB" depends-on-methods="com.api.testcases.TS_006_InsertPayment.createBillData" duration-ms="3169" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_091]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Insert Payment API if wallet balance less than total amount billing]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02133333333]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[40000]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Insufficient balance please top up]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertPaymentTest -->
        <test-method signature="insertPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:51:22 WIB" name="insertPaymentTest" data-provider="getInsertPayment-data" finished-at="2020-05-28T07:51:25 WIB" depends-on-methods="com.api.testcases.TS_006_InsertPayment.createBillData" duration-ms="2781" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_092]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Insert Payment API if wallet balance equals zero]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02133333333]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Insufficient balance please top up]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertPaymentTest -->
        <test-method signature="insertPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:51:25 WIB" name="insertPaymentTest" data-provider="getInsertPayment-data" finished-at="2020-05-28T07:51:28 WIB" depends-on-methods="com.api.testcases.TS_006_InsertPayment.createBillData" duration-ms="3128" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_093]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Insert Payment API with invalid payment method (contain alphabet)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02133333333]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1000000]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[JSON parse error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertPaymentTest -->
        <test-method signature="insertPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:51:28 WIB" name="insertPaymentTest" data-provider="getInsertPayment-data" finished-at="2020-05-28T07:51:33 WIB" depends-on-methods="com.api.testcases.TS_006_InsertPayment.createBillData" duration-ms="5237" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_094]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Insert Payment API with invalid payment method (contain symbol)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02133333333]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[@]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1000000]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[JSON parse error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertPaymentTest -->
        <test-method signature="insertPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:51:33 WIB" name="insertPaymentTest" data-provider="getInsertPayment-data" finished-at="2020-05-28T07:51:37 WIB" depends-on-methods="com.api.testcases.TS_006_InsertPayment.createBillData" duration-ms="3406" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_095]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Insert Payment API with invalid payment method (empty)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02133333333]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1000000]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Payment method not found]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertPaymentTest -->
        <test-method signature="insertPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:51:37 WIB" name="insertPaymentTest" data-provider="getInsertPayment-data" finished-at="2020-05-28T07:51:39 WIB" depends-on-methods="com.api.testcases.TS_006_InsertPayment.createBillData" duration-ms="2716" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_096]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Insert Payment API with invalid id bill (contain alphabet)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1000000]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[JSON parse error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertPaymentTest -->
        <test-method signature="insertPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:51:39 WIB" name="insertPaymentTest" data-provider="getInsertPayment-data" finished-at="2020-05-28T07:51:42 WIB" depends-on-methods="com.api.testcases.TS_006_InsertPayment.createBillData" duration-ms="3165" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_097]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Insert Payment API with invalid id bill (contain symbol)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[@]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1000000]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[JSON parse error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertPaymentTest -->
        <test-method signature="insertPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:51:42 WIB" name="insertPaymentTest" data-provider="getInsertPayment-data" finished-at="2020-05-28T07:51:46 WIB" depends-on-methods="com.api.testcases.TS_006_InsertPayment.createBillData" duration-ms="3066" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_098]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Insert Payment API with invalid id bill (empty)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1000000]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Bill not found]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertPaymentTest -->
        <test-method signature="insertPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:51:46 WIB" name="insertPaymentTest" data-provider="getInsertPayment-data" finished-at="2020-05-28T07:51:47 WIB" depends-on-methods="com.api.testcases.TS_006_InsertPayment.createBillData" duration-ms="1545" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_099]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Insert Payment API with invalid id user(contain alphabet)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02133333333]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1000000]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[JSON parse error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertPaymentTest -->
        <test-method signature="insertPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:51:47 WIB" name="insertPaymentTest" data-provider="getInsertPayment-data" finished-at="2020-05-28T07:51:49 WIB" depends-on-methods="com.api.testcases.TS_006_InsertPayment.createBillData" duration-ms="1536" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Insert Payment API with invalid id user (contain symbol)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[@]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02133333333]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1000000]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[JSON parse error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertPaymentTest -->
        <test-method signature="insertPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_006_InsertPayment@540a903b]" started-at="2020-05-28T07:51:49 WIB" name="insertPaymentTest" data-provider="getInsertPayment-data" finished-at="2020-05-28T07:51:50 WIB" depends-on-methods="com.api.testcases.TS_006_InsertPayment.createBillData" duration-ms="1581" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_101]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Insert Payment API with invalid id user (empty)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02133333333]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1000000]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[User not found]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertPaymentTest -->
      </class> <!-- com.api.testcases.TS_006_InsertPayment -->
      <class name="com.api.testcases.TS_008_GetUserPaymentHistory">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.api.testcases.TS_008_GetUserPaymentHistory@151db587]" started-at="2020-05-28T07:52:34 WIB" name="setUp" finished-at="2020-05-28T07:52:34 WIB" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="firstLogMessage()[pri:0, instance:com.api.testcases.TS_008_GetUserPaymentHistory@151db587]" started-at="2020-05-28T07:52:34 WIB" name="firstLogMessage" finished-at="2020-05-28T07:52:34 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstLogMessage -->
        <test-method signature="getProfileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_008_GetUserPaymentHistory@151db587]" started-at="2020-05-28T07:52:34 WIB" name="getProfileTest" data-provider="getUserPaymentHistory-data" finished-at="2020-05-28T07:52:36 WIB" duration-ms="1748" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_118]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Get User Payment History API if user exist]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Success]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Payment history has successfully sent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProfileTest -->
        <test-method signature="getProfileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_008_GetUserPaymentHistory@151db587]" started-at="2020-05-28T07:52:36 WIB" name="getProfileTest" data-provider="getUserPaymentHistory-data" finished-at="2020-05-28T07:52:37 WIB" duration-ms="1529" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_119]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Get User Payment History if user not exist]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Payment not found]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProfileTest -->
        <test-method signature="getProfileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_008_GetUserPaymentHistory@151db587]" started-at="2020-05-28T07:52:37 WIB" name="getProfileTest" data-provider="getUserPaymentHistory-data" finished-at="2020-05-28T07:52:39 WIB" duration-ms="1532" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_120]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Get User Payment History API with invalid user id (contain alphabet)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[JSON parse error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProfileTest -->
        <test-method signature="getProfileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_008_GetUserPaymentHistory@151db587]" started-at="2020-05-28T07:52:39 WIB" name="getProfileTest" data-provider="getUserPaymentHistory-data" finished-at="2020-05-28T07:52:41 WIB" duration-ms="2665" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_121]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Get User Payment History API with invalid user id (contain symbol)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[@]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[JSON parse error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProfileTest -->
        <test-method signature="getProfileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_008_GetUserPaymentHistory@151db587]" started-at="2020-05-28T07:52:41 WIB" name="getProfileTest" data-provider="getUserPaymentHistory-data" finished-at="2020-05-28T07:52:43 WIB" duration-ms="1505" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_122]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Get User Payment History API with invalid user id (empty)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Payment not found]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProfileTest -->
      </class> <!-- com.api.testcases.TS_008_GetUserPaymentHistory -->
      <class name="com.api.testcases.TS_009_Logout">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.api.testcases.TS_009_Logout@238acd0b]" started-at="2020-05-28T07:52:43 WIB" name="setUp" finished-at="2020-05-28T07:52:43 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="firstLogMessage()[pri:0, instance:com.api.testcases.TS_009_Logout@238acd0b]" started-at="2020-05-28T07:52:43 WIB" name="firstLogMessage" finished-at="2020-05-28T07:52:43 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstLogMessage -->
        <test-method signature="logoutTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_009_Logout@238acd0b]" started-at="2020-05-28T07:52:43 WIB" name="logoutTest" data-provider="logout-data" finished-at="2020-05-28T07:52:45 WIB" duration-ms="1543" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_118]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Logout API with positive path (user already login)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Success]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[User has successfully logout]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path data.idUser doesn't match.
Expected: <348>
  Actual: null
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path data.idUser doesn't match.
Expected: <348>
  Actual: null

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:494)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
at jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:277)
at io.restassured.specification.ResponseSpecification$content$1.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:260)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:274)
at com.api.testcases.TS_009_Logout.logoutTest(TS_009_Logout.java:67)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutTest -->
        <test-method signature="logoutTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_009_Logout@238acd0b]" started-at="2020-05-28T07:52:45 WIB" name="logoutTest" data-provider="logout-data" finished-at="2020-05-28T07:52:46 WIB" duration-ms="1529" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_119]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Logout API if user already logout]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[User is already logged out]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Response body doesn't match expectation.
Expected: a string containing "User is already logged out"
  Actual: [data:[:], message:User is already logged out, status:404]
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Response body doesn't match expectation.
Expected: a string containing "User is already logged out"
  Actual: [data:[:], message:User is already logged out, status:404]

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:494)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
at jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:97)
at io.restassured.internal.ValidatableResponseOptionsImpl.content(ValidatableResponseOptionsImpl.java:89)
at com.api.testcases.TS_009_Logout.logoutTest(TS_009_Logout.java:101)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutTest -->
        <test-method signature="logoutTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_009_Logout@238acd0b]" started-at="2020-05-28T07:52:46 WIB" name="logoutTest" data-provider="logout-data" finished-at="2020-05-28T07:52:48 WIB" duration-ms="1533" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_120]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Logout API if user not exist]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[User not found]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutTest -->
        <test-method signature="logoutTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_009_Logout@238acd0b]" started-at="2020-05-28T07:52:48 WIB" name="logoutTest" data-provider="logout-data" finished-at="2020-05-28T07:52:49 WIB" duration-ms="1516" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_121]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Logout API with invalid user id (contain alphabet)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[JSON parse error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutTest -->
        <test-method signature="logoutTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_009_Logout@238acd0b]" started-at="2020-05-28T07:52:49 WIB" name="logoutTest" data-provider="logout-data" finished-at="2020-05-28T07:52:51 WIB" duration-ms="1563" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_122]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Logout API with invalid user id (contain symbol)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[@]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[JSON parse error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutTest -->
        <test-method signature="logoutTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_009_Logout@238acd0b]" started-at="2020-05-28T07:52:51 WIB" name="logoutTest" data-provider="logout-data" finished-at="2020-05-28T07:52:52 WIB" duration-ms="1473" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Logout API with invalid user id (empty)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[User not found]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutTest -->
      </class> <!-- com.api.testcases.TS_009_Logout -->
      <class name="com.api.testcases.TS_007_VerifyPayment">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.api.testcases.TS_007_VerifyPayment@58496dc]" started-at="2020-05-28T07:51:50 WIB" name="setUp" finished-at="2020-05-28T07:51:50 WIB" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="firstLogMessage()[pri:0, instance:com.api.testcases.TS_007_VerifyPayment@58496dc]" started-at="2020-05-28T07:51:50 WIB" name="firstLogMessage" finished-at="2020-05-28T07:51:50 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstLogMessage -->
        <test-method signature="createBillData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_007_VerifyPayment@58496dc]" started-at="2020-05-28T07:51:50 WIB" name="createBillData" data-provider="createBill-data" finished-at="2020-05-28T07:51:52 WIB" duration-ms="1811" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ridwan Remin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[02411111111]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[May]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[75000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[unpaid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillData -->
        <test-method signature="createBillData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_007_VerifyPayment@58496dc]" started-at="2020-05-28T07:51:52 WIB" name="createBillData" data-provider="createBill-data" finished-at="2020-05-28T07:51:54 WIB" duration-ms="1482" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Dodit Mulyanto]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[02422222222]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[May]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[75000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[unpaid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillData -->
        <test-method signature="createBillData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_007_VerifyPayment@58496dc]" started-at="2020-05-28T07:51:54 WIB" name="createBillData" data-provider="createBill-data" finished-at="2020-05-28T07:51:55 WIB" duration-ms="1595" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Raditya Dika]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[02433333333]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[May]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[75000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[unpaid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillData -->
        <test-method signature="createBillData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_007_VerifyPayment@58496dc]" started-at="2020-05-28T07:51:55 WIB" name="createBillData" data-provider="createBill-data" finished-at="2020-05-28T07:51:57 WIB" duration-ms="1499" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bintang Emon]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[02444444444]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[May]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[75000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[unpaid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillData -->
        <test-method signature="createBillData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_007_VerifyPayment@58496dc]" started-at="2020-05-28T07:51:57 WIB" name="createBillData" data-provider="createBill-data" finished-at="2020-05-28T07:51:58 WIB" duration-ms="1563" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Fico fahriza]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[02455555555]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[May]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[75000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[unpaid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillData -->
        <test-method signature="createBillData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_007_VerifyPayment@58496dc]" started-at="2020-05-28T07:51:58 WIB" name="createBillData" data-provider="createBill-data" finished-at="2020-05-28T07:52:00 WIB" duration-ms="1691" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Yuda Aldiansyah]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[02466666666]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[May]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[75000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[unpaid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillData -->
        <test-method signature="insertSomePayment()[pri:0, instance:com.api.testcases.TS_007_VerifyPayment@58496dc]" started-at="2020-05-28T07:52:00 WIB" name="insertSomePayment" finished-at="2020-05-28T07:52:07 WIB" depends-on-methods="com.api.testcases.TS_007_VerifyPayment.createBillData" duration-ms="6667" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertSomePayment -->
        <test-method signature="verifyPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_007_VerifyPayment@58496dc]" started-at="2020-05-28T07:52:07 WIB" name="verifyPaymentTest" data-provider="verifyPayment-data" finished-at="2020-05-28T07:52:08 WIB" depends-on-methods="com.api.testcases.TS_007_VerifyPayment.insertSomePayment" duration-ms="1374" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_102]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Verify Payment API with positive test path (pay with wallet balance)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02411111111]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Payment success]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPaymentTest -->
        <test-method signature="verifyPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_007_VerifyPayment@58496dc]" started-at="2020-05-28T07:52:08 WIB" name="verifyPaymentTest" data-provider="verifyPayment-data" finished-at="2020-05-28T07:52:10 WIB" depends-on-methods="com.api.testcases.TS_007_VerifyPayment.insertSomePayment" duration-ms="1482" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_103]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Verify Payment API with positive test path (pay with wallet bank transfer)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02422222222]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Payment success]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPaymentTest -->
        <test-method signature="verifyPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_007_VerifyPayment@58496dc]" started-at="2020-05-28T07:52:10 WIB" name="verifyPaymentTest" data-provider="verifyPayment-data" finished-at="2020-05-28T07:52:12 WIB" depends-on-methods="com.api.testcases.TS_007_VerifyPayment.insertSomePayment" duration-ms="1913" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_104]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Verify Payment API if user not insert payment first (payment method : wallet balance)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02444444444]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[You must do the payment transaction first]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Response body doesn't match expectation.
Expected: a string containing "You must do the payment transaction first"
  Actual: [data:[:], message:You must do the payment transaction first, status:403]
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Response body doesn't match expectation.
Expected: a string containing "You must do the payment transaction first"
  Actual: [data:[:], message:You must do the payment transaction first, status:403]

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:494)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
at jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:97)
at io.restassured.internal.ValidatableResponseOptionsImpl.content(ValidatableResponseOptionsImpl.java:89)
at com.api.testcases.TS_007_VerifyPayment.verifyPaymentTest(TS_007_VerifyPayment.java:129)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPaymentTest -->
        <test-method signature="verifyPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_007_VerifyPayment@58496dc]" started-at="2020-05-28T07:52:12 WIB" name="verifyPaymentTest" data-provider="verifyPayment-data" finished-at="2020-05-28T07:52:14 WIB" depends-on-methods="com.api.testcases.TS_007_VerifyPayment.insertSomePayment" duration-ms="2045" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_105]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Verify Payment API if user not insert payment first (payment method : bank transfer)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02455555555]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[You must do the payment transaction first]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Response body doesn't match expectation.
Expected: a string containing "You must do the payment transaction first"
  Actual: [data:[:], message:You must do the payment transaction first, status:403]
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Response body doesn't match expectation.
Expected: a string containing "You must do the payment transaction first"
  Actual: [data:[:], message:You must do the payment transaction first, status:403]

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:494)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
at jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:97)
at io.restassured.internal.ValidatableResponseOptionsImpl.content(ValidatableResponseOptionsImpl.java:89)
at com.api.testcases.TS_007_VerifyPayment.verifyPaymentTest(TS_007_VerifyPayment.java:129)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPaymentTest -->
        <test-method signature="verifyPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_007_VerifyPayment@58496dc]" started-at="2020-05-28T07:52:14 WIB" name="verifyPaymentTest" data-provider="verifyPayment-data" finished-at="2020-05-28T07:52:15 WIB" depends-on-methods="com.api.testcases.TS_007_VerifyPayment.insertSomePayment" duration-ms="1635" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_106]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Verify Payment API with unrecognized payment method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02433333333]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[500]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Payment method not found]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPaymentTest -->
        <test-method signature="verifyPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_007_VerifyPayment@58496dc]" started-at="2020-05-28T07:52:15 WIB" name="verifyPaymentTest" data-provider="verifyPayment-data" finished-at="2020-05-28T07:52:18 WIB" depends-on-methods="com.api.testcases.TS_007_VerifyPayment.insertSomePayment" duration-ms="2056" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_107]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Verify Payment API with unregistered bill]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Bill not found]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPaymentTest -->
        <test-method signature="verifyPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_007_VerifyPayment@58496dc]" started-at="2020-05-28T07:52:18 WIB" name="verifyPaymentTest" data-provider="verifyPayment-data" finished-at="2020-05-28T07:52:19 WIB" depends-on-methods="com.api.testcases.TS_007_VerifyPayment.insertSomePayment" duration-ms="1534" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_108]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Verify Payment API with unregistered user]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02433333333]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[User not found]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPaymentTest -->
        <test-method signature="verifyPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_007_VerifyPayment@58496dc]" started-at="2020-05-28T07:52:19 WIB" name="verifyPaymentTest" data-provider="verifyPayment-data" finished-at="2020-05-28T07:52:21 WIB" depends-on-methods="com.api.testcases.TS_007_VerifyPayment.insertSomePayment" duration-ms="1531" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_109]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Verify Payment API with invalid payment method (contain alphabet)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02433333333]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[JSON parse error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPaymentTest -->
        <test-method signature="verifyPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_007_VerifyPayment@58496dc]" started-at="2020-05-28T07:52:21 WIB" name="verifyPaymentTest" data-provider="verifyPayment-data" finished-at="2020-05-28T07:52:23 WIB" depends-on-methods="com.api.testcases.TS_007_VerifyPayment.insertSomePayment" duration-ms="1936" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_110]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Verify Payment API with invalid payment method (contain symbol)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02433333333]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[@]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[JSON parse error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPaymentTest -->
        <test-method signature="verifyPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_007_VerifyPayment@58496dc]" started-at="2020-05-28T07:52:23 WIB" name="verifyPaymentTest" data-provider="verifyPayment-data" finished-at="2020-05-28T07:52:25 WIB" depends-on-methods="com.api.testcases.TS_007_VerifyPayment.insertSomePayment" duration-ms="2244" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_111]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Verify Payment API with invalid payment method (empty)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02433333333]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Payment method not found]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPaymentTest -->
        <test-method signature="verifyPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_007_VerifyPayment@58496dc]" started-at="2020-05-28T07:52:25 WIB" name="verifyPaymentTest" data-provider="verifyPayment-data" finished-at="2020-05-28T07:52:26 WIB" depends-on-methods="com.api.testcases.TS_007_VerifyPayment.insertSomePayment" duration-ms="1550" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_112]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Verify Payment API with invalid id bill (contain alphabet)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[JSON parse error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPaymentTest -->
        <test-method signature="verifyPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_007_VerifyPayment@58496dc]" started-at="2020-05-28T07:52:26 WIB" name="verifyPaymentTest" data-provider="verifyPayment-data" finished-at="2020-05-28T07:52:28 WIB" depends-on-methods="com.api.testcases.TS_007_VerifyPayment.insertSomePayment" duration-ms="1515" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_113]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Verify Payment API with invalid id bill (contain symbol)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[@]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[JSON parse error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPaymentTest -->
        <test-method signature="verifyPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_007_VerifyPayment@58496dc]" started-at="2020-05-28T07:52:28 WIB" name="verifyPaymentTest" data-provider="verifyPayment-data" finished-at="2020-05-28T07:52:29 WIB" depends-on-methods="com.api.testcases.TS_007_VerifyPayment.insertSomePayment" duration-ms="1536" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_114]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Verify Payment API with invalid id bill (empty)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Bill not found]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPaymentTest -->
        <test-method signature="verifyPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_007_VerifyPayment@58496dc]" started-at="2020-05-28T07:52:29 WIB" name="verifyPaymentTest" data-provider="verifyPayment-data" finished-at="2020-05-28T07:52:31 WIB" depends-on-methods="com.api.testcases.TS_007_VerifyPayment.insertSomePayment" duration-ms="1434" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_115]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Verify Payment API with invalid id user (contain alphabet)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02433333333]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[JSON parse error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPaymentTest -->
        <test-method signature="verifyPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_007_VerifyPayment@58496dc]" started-at="2020-05-28T07:52:31 WIB" name="verifyPaymentTest" data-provider="verifyPayment-data" finished-at="2020-05-28T07:52:32 WIB" depends-on-methods="com.api.testcases.TS_007_VerifyPayment.insertSomePayment" duration-ms="1477" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_116]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Verify Payment API with invalid id user (contain symbol)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[@]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02433333333]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[JSON parse error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPaymentTest -->
        <test-method signature="verifyPaymentTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_007_VerifyPayment@58496dc]" started-at="2020-05-28T07:52:32 WIB" name="verifyPaymentTest" data-provider="verifyPayment-data" finished-at="2020-05-28T07:52:34 WIB" depends-on-methods="com.api.testcases.TS_007_VerifyPayment.insertSomePayment" duration-ms="1585" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_117]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Verify Payment API with invalid id user (empty)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Depend#02433333333]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[User not found]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPaymentTest -->
      </class> <!-- com.api.testcases.TS_007_VerifyPayment -->
      <class name="com.api.testcases.TS_001_CreateAccount">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:47:41 WIB" name="setUp" finished-at="2020-05-28T07:47:41 WIB" duration-ms="83" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="firstLogMessage()[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:47:41 WIB" name="firstLogMessage" finished-at="2020-05-28T07:47:41 WIB" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstLogMessage -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:47:42 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:03 WIB" duration-ms="20196" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with positive path (All Valid)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[83833833834]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Success]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[201]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Account has successfully created]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:03 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:08 WIB" duration-ms="5529" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_002]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API if User Exist (email exist)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[83833833835]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Email already registered]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:08 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:10 WIB" duration-ms="1778" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_003]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API if User Exist (phone number exist)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo2@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[83833833834]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Phone number already registered]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:10 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:12 WIB" duration-ms="1589" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_004]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid name (less than 3 char)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Mu]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo2@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[83833833835]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid name]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:12 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:13 WIB" duration-ms="1371" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_005]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid name (more than 20 char)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie Nugroh]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo2@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[83833833835]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid name]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:13 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:15 WIB" duration-ms="1610" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_006]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid name (contain digit)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo2@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[83833833835]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid name]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:15 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:16 WIB" duration-ms="1623" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_007]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid name (contain symbol)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie@]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo2@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[83833833835]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid name]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:16 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:18 WIB" duration-ms="1624" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_008]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid name (empty field)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo2@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[83833833835]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid name]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:18 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:19 WIB" duration-ms="1444" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_009]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid email (missing domain name)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo2@.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[83833833835]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid email]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:19 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:21 WIB" duration-ms="1608" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_010]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid email (missing top level domain)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo2@gmail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[83833833835]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid email]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:21 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:23 WIB" duration-ms="2404" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_011]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid email (recepient name missing)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[83833833835]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid email]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:23 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:25 WIB" duration-ms="1519" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_012]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid email (missing @ symbol)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo2gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[83833833835]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid email]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:25 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:28 WIB" duration-ms="3301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_013]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid email (double @ symbol)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo2@@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[83833833835]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid email]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:28 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:30 WIB" duration-ms="1596" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_014]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid email (contain whitespace)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yogi nugrohoo2@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[83833833835]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid email]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:30 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:32 WIB" duration-ms="1826" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_015]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid email (empty field)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[83833833835]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid email]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:32 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:33 WIB" duration-ms="1795" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_016]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid phone number (less than 9 digit)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo2@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[83833833]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid phone]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:33 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:37 WIB" duration-ms="3275" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid phone number (more than 12 digit)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo2@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[8383383383567]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid phone]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <403> but was <201>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <403> but was <201>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:238)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:494)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
at jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:125)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:133)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
at com.api.testcases.TS_001_CreateAccount.createAccountTest(TS_001_CreateAccount.java:82)
at jdk.internal.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:37 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:38 WIB" duration-ms="1512" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_018]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid phone number (contain symbol)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo2@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[@@@]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid phone]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:38 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:40 WIB" duration-ms="1533" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_019]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid phone number (contain alphabet)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo2@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid phone]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:40 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:41 WIB" duration-ms="1638" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_020]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid phone number (contain whitespace)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo2@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[6283 833833835]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid phone]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:41 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:43 WIB" duration-ms="1557" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_021]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid phone number (empty field)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo2@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid phone]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:43 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:45 WIB" duration-ms="1619" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_022]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid password (less than 8 char)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo2@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[6283833833835]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Passw2@]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:45 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:46 WIB" duration-ms="1521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_023]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid password (more than 20 char)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo2@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[6283833833835]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password123@Password1]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:46 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:49 WIB" duration-ms="2554" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid password (no digit)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo2@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[6283833833835]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password@]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:49 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:50 WIB" duration-ms="1535" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_025]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid password (no uppercase)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo2@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[6283833833835]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[password123@]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:50 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:52 WIB" duration-ms="1534" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_026]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid password (no lowercase)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo2@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[6283833833835]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[PASSWORD123@]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:52 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:53 WIB" duration-ms="1529" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_027]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid password (no symbol)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo2@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[6283833833835]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password123]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:53 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:55 WIB" duration-ms="1520" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_028]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid password (contain whitespace)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo2@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[6283833833835]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password123 @]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
        <test-method signature="createAccountTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_001_CreateAccount@bc0f53b]" started-at="2020-05-28T07:48:55 WIB" name="createAccountTest" data-provider="createAccount-data" finished-at="2020-05-28T07:48:56 WIB" duration-ms="1547" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_029]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Register Account API with invalid password (empty)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Muhammad Yogie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo2@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[6283833833835]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Invalid password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountTest -->
      </class> <!-- com.api.testcases.TS_001_CreateAccount -->
      <class name="com.api.testcases.TS_003_SendOTP">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.api.testcases.TS_003_SendOTP@4682eba5]" started-at="2020-05-28T07:49:30 WIB" name="setUp" finished-at="2020-05-28T07:49:30 WIB" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="firstLogMessage()[pri:0, instance:com.api.testcases.TS_003_SendOTP@4682eba5]" started-at="2020-05-28T07:49:30 WIB" name="firstLogMessage" finished-at="2020-05-28T07:49:30 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstLogMessage -->
        <test-method signature="sendOTPTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_003_SendOTP@4682eba5]" started-at="2020-05-28T07:49:30 WIB" name="sendOTPTest" data-provider="sendOTP-data" finished-at="2020-05-28T07:49:34 WIB" duration-ms="3384" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_049]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Send OTP API if user exist, phone number true & email true ]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Success]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[201]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[-]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <201> but was <500>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <201> but was <500>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:494)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
at jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:125)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:133)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
at com.api.testcases.TS_003_SendOTP.sendOTPTest(TS_003_SendOTP.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendOTPTest -->
        <test-method signature="sendOTPTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_003_SendOTP@4682eba5]" started-at="2020-05-28T07:49:34 WIB" name="sendOTPTest" data-provider="sendOTP-data" finished-at="2020-05-28T07:49:35 WIB" duration-ms="1480" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_050]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Send OTP API if user exist, phone number false but email true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833833]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Success]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[201]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[-]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <201> but was <500>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <201> but was <500>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:494)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
at jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:125)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:133)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
at com.api.testcases.TS_003_SendOTP.sendOTPTest(TS_003_SendOTP.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendOTPTest -->
        <test-method signature="sendOTPTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_003_SendOTP@4682eba5]" started-at="2020-05-28T07:49:35 WIB" name="sendOTPTest" data-provider="sendOTP-data" finished-at="2020-05-28T07:49:37 WIB" duration-ms="1511" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_051]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Send OTP API if user exist, phone number true but email false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugroh@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Success]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[201]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[-]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <201> but was <500>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <201> but was <500>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:494)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
at jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:125)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:133)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
at com.api.testcases.TS_003_SendOTP.sendOTPTest(TS_003_SendOTP.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendOTPTest -->
        <test-method signature="sendOTPTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_003_SendOTP@4682eba5]" started-at="2020-05-28T07:49:37 WIB" name="sendOTPTest" data-provider="sendOTP-data" finished-at="2020-05-28T07:49:38 WIB" duration-ms="1323" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_052]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Send OTP API if user not exist]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833833]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugroh@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Success]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[201]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[-]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <201> but was <500>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <201> but was <500>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:494)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
at jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:125)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:133)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
at com.api.testcases.TS_003_SendOTP.sendOTPTest(TS_003_SendOTP.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendOTPTest -->
        <test-method signature="sendOTPTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_003_SendOTP@4682eba5]" started-at="2020-05-28T07:49:38 WIB" name="sendOTPTest" data-provider="sendOTP-data" finished-at="2020-05-28T07:49:39 WIB" duration-ms="1481" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_053]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Send OTP API with invalid phone number (less than 9 digit)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid phone number]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendOTPTest -->
        <test-method signature="sendOTPTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_003_SendOTP@4682eba5]" started-at="2020-05-28T07:49:39 WIB" name="sendOTPTest" data-provider="sendOTP-data" finished-at="2020-05-28T07:49:41 WIB" duration-ms="1607" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_054]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Send OTP API with invalid phone number (more than 12 digit)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8383383383567]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid phone number]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <403> but was <500>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <403> but was <500>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:494)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
at jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:125)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:133)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
at com.api.testcases.TS_003_SendOTP.sendOTPTest(TS_003_SendOTP.java:65)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendOTPTest -->
        <test-method signature="sendOTPTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_003_SendOTP@4682eba5]" started-at="2020-05-28T07:49:41 WIB" name="sendOTPTest" data-provider="sendOTP-data" finished-at="2020-05-28T07:49:42 WIB" duration-ms="1478" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_055]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Send OTP API with invalid phone number (contain symbol)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8383383383@]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid phone number]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendOTPTest -->
        <test-method signature="sendOTPTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_003_SendOTP@4682eba5]" started-at="2020-05-28T07:49:42 WIB" name="sendOTPTest" data-provider="sendOTP-data" finished-at="2020-05-28T07:49:44 WIB" duration-ms="1918" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_056]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Send OTP API with invalid phone number (contain alphabet)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8383383383b]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid phone number]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendOTPTest -->
        <test-method signature="sendOTPTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_003_SendOTP@4682eba5]" started-at="2020-05-28T07:49:44 WIB" name="sendOTPTest" data-provider="sendOTP-data" finished-at="2020-05-28T07:49:46 WIB" duration-ms="1487" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_057]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Send OTP API with invalid phone number (contain whitespace)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83 833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid phone number]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendOTPTest -->
        <test-method signature="sendOTPTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_003_SendOTP@4682eba5]" started-at="2020-05-28T07:49:46 WIB" name="sendOTPTest" data-provider="sendOTP-data" finished-at="2020-05-28T07:49:49 WIB" duration-ms="2829" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_058]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Send OTP API with invalid phone number (empty field)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid phone number]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendOTPTest -->
        <test-method signature="sendOTPTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_003_SendOTP@4682eba5]" started-at="2020-05-28T07:49:49 WIB" name="sendOTPTest" data-provider="sendOTP-data" finished-at="2020-05-28T07:49:50 WIB" duration-ms="1521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_059]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Send OTP API with invalid email (missing domain name)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo@.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid email]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendOTPTest -->
        <test-method signature="sendOTPTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_003_SendOTP@4682eba5]" started-at="2020-05-28T07:49:50 WIB" name="sendOTPTest" data-provider="sendOTP-data" finished-at="2020-05-28T07:49:52 WIB" duration-ms="1623" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_060]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Send OTP API with invalid email (missing top level domain)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo@gmail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid email]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendOTPTest -->
        <test-method signature="sendOTPTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_003_SendOTP@4682eba5]" started-at="2020-05-28T07:49:52 WIB" name="sendOTPTest" data-provider="sendOTP-data" finished-at="2020-05-28T07:49:53 WIB" duration-ms="1547" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_061]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Send OTP API with invalid email (recepient name missing)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid email]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendOTPTest -->
        <test-method signature="sendOTPTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_003_SendOTP@4682eba5]" started-at="2020-05-28T07:49:53 WIB" name="sendOTPTest" data-provider="sendOTP-data" finished-at="2020-05-28T07:49:55 WIB" duration-ms="1393" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_062]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Send OTP API with invalid email (missing @ symbol)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoogmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid email]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendOTPTest -->
        <test-method signature="sendOTPTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_003_SendOTP@4682eba5]" started-at="2020-05-28T07:49:55 WIB" name="sendOTPTest" data-provider="sendOTP-data" finished-at="2020-05-28T07:49:56 WIB" duration-ms="1557" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_063]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Send OTP API with invalid email (double @ symbol)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yoginugrohoo@@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid email]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendOTPTest -->
        <test-method signature="sendOTPTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_003_SendOTP@4682eba5]" started-at="2020-05-28T07:49:56 WIB" name="sendOTPTest" data-provider="sendOTP-data" finished-at="2020-05-28T07:49:58 WIB" duration-ms="1475" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_064]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Send OTP API with invalid email (contain whitespace)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[yogi nugrohoo@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid email]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendOTPTest -->
        <test-method signature="sendOTPTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_003_SendOTP@4682eba5]" started-at="2020-05-28T07:49:58 WIB" name="sendOTPTest" data-provider="sendOTP-data" finished-at="2020-05-28T07:49:59 WIB" duration-ms="1441" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_065]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Send OTP API with invalid email (empty field)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid email]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendOTPTest -->
      </class> <!-- com.api.testcases.TS_003_SendOTP -->
      <class name="com.api.testcases.CleanUpEverything">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.api.testcases.CleanUpEverything@23811a09]" started-at="2020-05-28T07:52:52 WIB" name="setUp" finished-at="2020-05-28T07:52:52 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="cleanUp()[pri:0, instance:com.api.testcases.CleanUpEverything@23811a09]" started-at="2020-05-28T07:52:52 WIB" name="cleanUp" finished-at="2020-05-28T07:53:43 WIB" duration-ms="50663" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- com.api.testcases.CleanUpEverything -->
      <class name="com.api.testcases.TS_002_Login">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.api.testcases.TS_002_Login@8d7b252]" started-at="2020-05-28T07:48:56 WIB" name="setUp" finished-at="2020-05-28T07:48:56 WIB" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="firstLogMessage()[pri:0, instance:com.api.testcases.TS_002_Login@8d7b252]" started-at="2020-05-28T07:48:56 WIB" name="firstLogMessage" finished-at="2020-05-28T07:48:58 WIB" duration-ms="1466" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstLogMessage -->
        <test-method signature="loginTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_002_Login@8d7b252]" started-at="2020-05-28T07:48:58 WIB" name="loginTest" data-provider="login-data" finished-at="2020-05-28T07:49:00 WIB" duration-ms="1774" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_030]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Login Account API with positive path (user exist, phone number true and password true)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Success]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_002_Login@8d7b252]" started-at="2020-05-28T07:49:00 WIB" name="loginTest" data-provider="login-data" finished-at="2020-05-28T07:49:02 WIB" duration-ms="1565" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_031]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Login Account API if user already login]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Success]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[User is already logged in]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_002_Login@8d7b252]" started-at="2020-05-28T07:49:02 WIB" name="loginTest" data-provider="login-data" finished-at="2020-05-28T07:49:03 WIB" duration-ms="1491" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_032]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Login Account API if user exist,  phone number true but password false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Password12@]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Phone number or password wrong]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_002_Login@8d7b252]" started-at="2020-05-28T07:49:03 WIB" name="loginTest" data-provider="login-data" finished-at="2020-05-28T07:49:05 WIB" duration-ms="1543" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_033]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Login Account API if user exist,  phone number false but password true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833833]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Password12@]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Phone number or password wrong]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_002_Login@8d7b252]" started-at="2020-05-28T07:49:05 WIB" name="loginTest" data-provider="login-data" finished-at="2020-05-28T07:49:06 WIB" duration-ms="1488" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_034]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Login Account API if user not exist]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833833]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Phone number or password wrong]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_002_Login@8d7b252]" started-at="2020-05-28T07:49:06 WIB" name="loginTest" data-provider="login-data" finished-at="2020-05-28T07:49:08 WIB" duration-ms="1605" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_035]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Login Account API with invalid phone number (less than 9 digit)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid phone number]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_002_Login@8d7b252]" started-at="2020-05-28T07:49:08 WIB" name="loginTest" data-provider="login-data" finished-at="2020-05-28T07:49:10 WIB" duration-ms="1896" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_036]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Login Account API with invalid phone number (more than 12 digit)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8383383383567]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid phone number]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Response body doesn't match expectation.
Expected: a string containing "Invalid phone number"
  Actual: [data:[:], message:Phone number or password wrong, status:403]
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Response body doesn't match expectation.
Expected: a string containing "Invalid phone number"
  Actual: [data:[:], message:Phone number or password wrong, status:403]

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:494)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
at jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:97)
at io.restassured.internal.ValidatableResponseOptionsImpl.content(ValidatableResponseOptionsImpl.java:89)
at com.api.testcases.TS_002_Login.loginTest(TS_002_Login.java:77)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_002_Login@8d7b252]" started-at="2020-05-28T07:49:10 WIB" name="loginTest" data-provider="login-data" finished-at="2020-05-28T07:49:12 WIB" duration-ms="1975" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_037]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Login Account API with invalid phone number (contain symbol)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[@@@]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid phone number]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_002_Login@8d7b252]" started-at="2020-05-28T07:49:12 WIB" name="loginTest" data-provider="login-data" finished-at="2020-05-28T07:49:13 WIB" duration-ms="1492" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_038]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Login Account API with invalid phone number (contain alphabet)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid phone number]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_002_Login@8d7b252]" started-at="2020-05-28T07:49:13 WIB" name="loginTest" data-provider="login-data" finished-at="2020-05-28T07:49:15 WIB" duration-ms="1419" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_039]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Login Account API with invalid phone number (contain whitespace)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6283 833833835]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid phone number]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_002_Login@8d7b252]" started-at="2020-05-28T07:49:15 WIB" name="loginTest" data-provider="login-data" finished-at="2020-05-28T07:49:17 WIB" duration-ms="2903" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_040]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Login Account API with invalid phone number (empty field)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Password123@]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid phone number]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_002_Login@8d7b252]" started-at="2020-05-28T07:49:17 WIB" name="loginTest" data-provider="login-data" finished-at="2020-05-28T07:49:19 WIB" duration-ms="1754" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_041]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Login Account API with invalid password (less than 8 char)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833833]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Passw2@]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_002_Login@8d7b252]" started-at="2020-05-28T07:49:19 WIB" name="loginTest" data-provider="login-data" finished-at="2020-05-28T07:49:21 WIB" duration-ms="1522" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_042]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Login Account API with invalid password (more than 20 char)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833833]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Password123@Password1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_002_Login@8d7b252]" started-at="2020-05-28T07:49:21 WIB" name="loginTest" data-provider="login-data" finished-at="2020-05-28T07:49:22 WIB" duration-ms="1543" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_043]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Login Account API with invalid password (no digit)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833833]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Password@]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_002_Login@8d7b252]" started-at="2020-05-28T07:49:22 WIB" name="loginTest" data-provider="login-data" finished-at="2020-05-28T07:49:24 WIB" duration-ms="1552" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_044]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Login Account API with invalid password (no uppercase)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833833]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[password123@]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_002_Login@8d7b252]" started-at="2020-05-28T07:49:24 WIB" name="loginTest" data-provider="login-data" finished-at="2020-05-28T07:49:25 WIB" duration-ms="1509" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_045]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Login Account API with invalid password (no lowercase)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833833]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PASSWORD123@]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_002_Login@8d7b252]" started-at="2020-05-28T07:49:25 WIB" name="loginTest" data-provider="login-data" finished-at="2020-05-28T07:49:27 WIB" duration-ms="1520" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_046]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Login Account API with invalid password (no symbol)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833833]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Password123]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_002_Login@8d7b252]" started-at="2020-05-28T07:49:27 WIB" name="loginTest" data-provider="login-data" finished-at="2020-05-28T07:49:28 WIB" duration-ms="1568" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_047]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Login Account API with invalid password (contain whitespace)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833833]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Password123 @]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_002_Login@8d7b252]" started-at="2020-05-28T07:49:28 WIB" name="loginTest" data-provider="login-data" finished-at="2020-05-28T07:49:30 WIB" duration-ms="1334" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_048]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Login Account API with invalid password (empty)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[83833833833]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
      </class> <!-- com.api.testcases.TS_002_Login -->
      <class name="com.api.testcases.TS_005_GetUnpaidBill">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:08 WIB" name="setUp" finished-at="2020-05-28T07:50:08 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="firstLogMessage()[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:08 WIB" name="firstLogMessage" finished-at="2020-05-28T07:50:08 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstLogMessage -->
        <test-method signature="createBillData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:08 WIB" name="createBillData" data-provider="createBill-data" finished-at="2020-05-28T07:50:10 WIB" duration-ms="1392" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Wilson Fisk]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[02222222222]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[February]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[75000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[paid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillData -->
        <test-method signature="createBillData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:10 WIB" name="createBillData" data-provider="createBill-data" finished-at="2020-05-28T07:50:11 WIB" duration-ms="1515" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mat Murdock]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[02233333333]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[February]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[75000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[unpaid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillData -->
        <test-method signature="createBillData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:11 WIB" name="createBillData" data-provider="createBill-data" finished-at="2020-05-28T07:50:13 WIB" duration-ms="1548" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Foggy Nelson]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[02244444444]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[February]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[75000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[paid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillData -->
        <test-method signature="createBillData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:13 WIB" name="createBillData" data-provider="createBill-data" finished-at="2020-05-28T07:50:14 WIB" duration-ms="1485" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Foggy Nelson]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[02244444444]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[March]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[75000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[unpaid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillData -->
        <test-method signature="createBillData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:14 WIB" name="createBillData" data-provider="createBill-data" finished-at="2020-05-28T07:50:16 WIB" duration-ms="1320" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Elektra Natchios]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[02255555555]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[February]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[75000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[paid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillData -->
        <test-method signature="createBillData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:16 WIB" name="createBillData" data-provider="createBill-data" finished-at="2020-05-28T07:50:17 WIB" duration-ms="1585" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Elektra Natchios]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[02255555555]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[March]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[75000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[paid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillData -->
        <test-method signature="createBillData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:17 WIB" name="createBillData" data-provider="createBill-data" finished-at="2020-05-28T07:50:19 WIB" duration-ms="1595" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Karen Page]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[02266666666]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[February]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[75000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[paid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillData -->
        <test-method signature="createBillData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:19 WIB" name="createBillData" data-provider="createBill-data" finished-at="2020-05-28T07:50:20 WIB" duration-ms="1406" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Karen Page]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[02266666666]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[March]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[75000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[paid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillData -->
        <test-method signature="createBillData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:20 WIB" name="createBillData" data-provider="createBill-data" finished-at="2020-05-28T07:50:22 WIB" duration-ms="1497" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Karen Page]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[02266666666]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[April]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[75000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[unpaid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillData -->
        <test-method signature="createBillData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:22 WIB" name="createBillData" data-provider="createBill-data" finished-at="2020-05-28T07:50:23 WIB" duration-ms="1635" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Greyson Ace]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[02277777777]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[February]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[75000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[paid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillData -->
        <test-method signature="createBillData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:23 WIB" name="createBillData" data-provider="createBill-data" finished-at="2020-05-28T07:50:25 WIB" duration-ms="1528" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Greyson Ace]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[02277777777]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[March]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[75000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[paid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillData -->
        <test-method signature="createBillData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:25 WIB" name="createBillData" data-provider="createBill-data" finished-at="2020-05-28T07:50:26 WIB" duration-ms="1392" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Greyson Ace]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0227777777]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[April]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[75000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[unpaid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillData -->
        <test-method signature="createBillData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:26 WIB" name="createBillData" data-provider="createBill-data" finished-at="2020-05-28T07:50:28 WIB" duration-ms="1463" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Greyson Ace]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[02277777777]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[May]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[75000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[unpaid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBillData -->
        <test-method signature="getUnpaidBillTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:28 WIB" name="getUnpaidBillTest" data-provider="getUnpaidBill-data" finished-at="2020-05-28T07:50:30 WIB" depends-on-methods="com.api.testcases.TS_005_GetUnpaidBill.createBillData" duration-ms="1820" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_071]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Get Telephone Bills API with positive test path (Registered Phone Number, have billing)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[02233333333]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Bill Sent]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Bill has successfully sent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnpaidBillTest -->
        <test-method signature="getUnpaidBillTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:30 WIB" name="getUnpaidBillTest" data-provider="getUnpaidBill-data" finished-at="2020-05-28T07:50:31 WIB" depends-on-methods="com.api.testcases.TS_005_GetUnpaidBill.createBillData" duration-ms="1485" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_072]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Get Telephone Bills API with positive test path (Registered Phone Number, 1 paid billing, 1 unpaid billing)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[02244444444]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Bill Sent]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Bill has successfully sent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnpaidBillTest -->
        <test-method signature="getUnpaidBillTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:31 WIB" name="getUnpaidBillTest" data-provider="getUnpaidBill-data" finished-at="2020-05-28T07:50:33 WIB" depends-on-methods="com.api.testcases.TS_005_GetUnpaidBill.createBillData" duration-ms="1370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_073]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Get Telephone Bills API with positive test path (Registered Phone Number, 2 paid billing, 1 unpaid billing)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[02266666666]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Bill Sent]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Bill has successfully sent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnpaidBillTest -->
        <test-method signature="getUnpaidBillTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:33 WIB" name="getUnpaidBillTest" data-provider="getUnpaidBill-data" finished-at="2020-05-28T07:50:34 WIB" depends-on-methods="com.api.testcases.TS_005_GetUnpaidBill.createBillData" duration-ms="1603" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_074]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Get Telephone Bills API with positive test path (Registered Phone Number, 2 paid billing, 2 unpaid billing)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[02277777777]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Bill Sent]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Bill has successfully sent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnpaidBillTest -->
        <test-method signature="getUnpaidBillTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:34 WIB" name="getUnpaidBillTest" data-provider="getUnpaidBill-data" finished-at="2020-05-28T07:50:36 WIB" depends-on-methods="com.api.testcases.TS_005_GetUnpaidBill.createBillData" duration-ms="1717" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_075]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Get Telephone Bills API with negative test (valid data, phone number not registered)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[02211111111]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Not Found]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Bill not found]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnpaidBillTest -->
        <test-method signature="getUnpaidBillTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:36 WIB" name="getUnpaidBillTest" data-provider="getUnpaidBill-data" finished-at="2020-05-28T07:50:38 WIB" depends-on-methods="com.api.testcases.TS_005_GetUnpaidBill.createBillData" duration-ms="1826" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_076]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Get Telephone Bills API with negative test (valid data, phone number registered but no billing)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[02222222222]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Not Found]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Bill not found]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnpaidBillTest -->
        <test-method signature="getUnpaidBillTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:38 WIB" name="getUnpaidBillTest" data-provider="getUnpaidBill-data" finished-at="2020-05-28T07:50:39 WIB" depends-on-methods="com.api.testcases.TS_005_GetUnpaidBill.createBillData" duration-ms="1600" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_077]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Get Telephone Bills API with negative test (Registered Phone Number, 2 paid billing, 0 unpaid billing)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[02255555555]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Not Found]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Bill not found]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnpaidBillTest -->
        <test-method signature="getUnpaidBillTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:39 WIB" name="getUnpaidBillTest" data-provider="getUnpaidBill-data" finished-at="2020-05-28T07:50:41 WIB" depends-on-methods="com.api.testcases.TS_005_GetUnpaidBill.createBillData" duration-ms="1474" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_078]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Get Telephone Bills API with invalid phone number (less than 8 digit)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0227777]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Fail get bills]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Invalid phone number]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnpaidBillTest -->
        <test-method signature="getUnpaidBillTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:41 WIB" name="getUnpaidBillTest" data-provider="getUnpaidBill-data" finished-at="2020-05-28T07:50:42 WIB" depends-on-methods="com.api.testcases.TS_005_GetUnpaidBill.createBillData" duration-ms="1453" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_079]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Get Telephone Bills API with invalid phone number (more than than 13 digit)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[02277777777777]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Fail get bills]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Invalid phone number]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnpaidBillTest -->
        <test-method signature="getUnpaidBillTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:42 WIB" name="getUnpaidBillTest" data-provider="getUnpaidBill-data" finished-at="2020-05-28T07:50:44 WIB" depends-on-methods="com.api.testcases.TS_005_GetUnpaidBill.createBillData" duration-ms="1370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_081]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Get Telephone Bills API with invalid phone number (contain symbol)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[021758678577@]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Fail get bills]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Invalid phone number]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnpaidBillTest -->
        <test-method signature="getUnpaidBillTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:44 WIB" name="getUnpaidBillTest" data-provider="getUnpaidBill-data" finished-at="2020-05-28T07:50:45 WIB" depends-on-methods="com.api.testcases.TS_005_GetUnpaidBill.createBillData" duration-ms="1432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_082]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Get Telephone Bills API with invalid phone number (contain alphabet)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[021758678577a]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Fail get bills]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Invalid phone number]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnpaidBillTest -->
        <test-method signature="getUnpaidBillTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:45 WIB" name="getUnpaidBillTest" data-provider="getUnpaidBill-data" finished-at="2020-05-28T07:50:47 WIB" depends-on-methods="com.api.testcases.TS_005_GetUnpaidBill.createBillData" duration-ms="1599" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_080]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Get Telephone Bills API with invalid phone number (contain whitespace)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[02175867 8577]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Fail get bills]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Invalid phone number]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnpaidBillTest -->
        <test-method signature="getUnpaidBillTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_005_GetUnpaidBill@61fafb74]" started-at="2020-05-28T07:50:47 WIB" name="getUnpaidBillTest" data-provider="getUnpaidBill-data" finished-at="2020-05-28T07:50:48 WIB" depends-on-methods="com.api.testcases.TS_005_GetUnpaidBill.createBillData" duration-ms="1488" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS_083]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Get Telephone Bills API with invalid phone number (empty)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Fail get bills]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[403]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Invalid phone number]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnpaidBillTest -->
      </class> <!-- com.api.testcases.TS_005_GetUnpaidBill -->
      <class name="com.api.testcases.TS_004_GetUserProfile">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.api.testcases.TS_004_GetUserProfile@6d9fb2d1]" started-at="2020-05-28T07:49:59 WIB" name="setUp" finished-at="2020-05-28T07:49:59 WIB" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="firstLogMessage()[pri:0, instance:com.api.testcases.TS_004_GetUserProfile@6d9fb2d1]" started-at="2020-05-28T07:49:59 WIB" name="firstLogMessage" finished-at="2020-05-28T07:49:59 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstLogMessage -->
        <test-method signature="getProfileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_004_GetUserProfile@6d9fb2d1]" started-at="2020-05-28T07:49:59 WIB" name="getProfileTest" data-provider="getUserProfile-data" finished-at="2020-05-28T07:50:02 WIB" duration-ms="2836" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_066]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Get User Profile API if user exist]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Depend#83833833834]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Success]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[User profile has successfully sent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProfileTest -->
        <test-method signature="getProfileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_004_GetUserProfile@6d9fb2d1]" started-at="2020-05-28T07:50:02 WIB" name="getProfileTest" data-provider="getUserProfile-data" finished-at="2020-05-28T07:50:04 WIB" duration-ms="1501" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_067]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Get User Profile API if user not exist]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[User not found]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProfileTest -->
        <test-method signature="getProfileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_004_GetUserProfile@6d9fb2d1]" started-at="2020-05-28T07:50:04 WIB" name="getProfileTest" data-provider="getUserProfile-data" finished-at="2020-05-28T07:50:05 WIB" duration-ms="1651" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_068]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Get User Profile API with invalid user id (contain alphabet)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[JSON parse error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProfileTest -->
        <test-method signature="getProfileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_004_GetUserProfile@6d9fb2d1]" started-at="2020-05-28T07:50:05 WIB" name="getProfileTest" data-provider="getUserProfile-data" finished-at="2020-05-28T07:50:07 WIB" duration-ms="1449" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_069]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Get User Profile API with invalid user id (contain symbol)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[@]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[JSON parse error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProfileTest -->
        <test-method signature="getProfileTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.api.testcases.TS_004_GetUserProfile@6d9fb2d1]" started-at="2020-05-28T07:50:07 WIB" name="getProfileTest" data-provider="getUserProfile-data" finished-at="2020-05-28T07:50:08 WIB" duration-ms="1380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_070]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Get User Profile API with invalid user id (empty)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[User not found]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProfileTest -->
      </class> <!-- com.api.testcases.TS_004_GetUserProfile -->
    </test> <!-- APITest -->
  </suite> <!-- APISuite -->
</testng-results>
