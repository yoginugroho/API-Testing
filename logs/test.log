2020-05-26 18:34:29 INFO  Config:26 - 
2020-05-26 18:34:29 INFO  Config:27 - =====TS_001 Create Account=====
2020-05-26 18:34:52 INFO  Config:44 - 
2020-05-26 18:34:52 INFO  Config:45 - 
2020-05-26 18:34:52 INFO  Config:46 - Test Case ID :TC_001 - Description :Test Register Account API with positive path (All Valid)
2020-05-26 18:34:52 INFO  Config:51 - Status code => 201
2020-05-26 18:34:52 INFO  Config:52 - Content-type => application/json
2020-05-26 18:34:52 INFO  Config:53 - Response body => {"data":{"idUser":346,"name":"Muhammad Yogie","email":"yoginugrohoo@gmail.com","password":"Password123@","phoneNumber":"83833833834","balance":200000.0,"token":3741},"message":"Account has successfully created","status":"201"}
2020-05-26 18:34:52 INFO  Config:56 - Assert status code...
2020-05-26 18:34:52 INFO  Config:58 - Success!
2020-05-26 18:34:52 INFO  Config:59 - Assert Content-Type...
2020-05-26 18:34:52 INFO  Config:61 - Assert response body...
2020-05-26 18:34:53 INFO  Config:70 - success!
2020-05-26 18:34:54 INFO  Config:44 - 
2020-05-26 18:34:54 INFO  Config:45 - 
2020-05-26 18:34:54 INFO  Config:46 - Test Case ID :TC_002 - Description :Test Register Account API if User Exist (email exist)
2020-05-26 18:34:54 INFO  Config:51 - Status code => 403
2020-05-26 18:34:54 INFO  Config:52 - Content-type => application/json
2020-05-26 18:34:54 INFO  Config:53 - Response body => {"data":{},"message":"Email already registered","status":"403"}
2020-05-26 18:34:54 INFO  Config:81 - Assert status code...
2020-05-26 18:34:54 INFO  Config:83 - Success!
2020-05-26 18:34:54 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:34:55 INFO  Config:86 - Success!
2020-05-26 18:34:55 INFO  Config:87 - Assert response body...
2020-05-26 18:34:55 INFO  Config:91 - Success!
2020-05-26 18:34:56 INFO  Config:44 - 
2020-05-26 18:34:56 INFO  Config:45 - 
2020-05-26 18:34:56 INFO  Config:46 - Test Case ID :TC_003 - Description :Test Register Account API if User Exist (phone number exist)
2020-05-26 18:34:56 INFO  Config:51 - Status code => 403
2020-05-26 18:34:56 INFO  Config:52 - Content-type => application/json
2020-05-26 18:34:56 INFO  Config:53 - Response body => {"data":{},"message":"Phone number already registered","status":"403"}
2020-05-26 18:34:56 INFO  Config:81 - Assert status code...
2020-05-26 18:34:56 INFO  Config:83 - Success!
2020-05-26 18:34:56 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:34:56 INFO  Config:86 - Success!
2020-05-26 18:34:56 INFO  Config:87 - Assert response body...
2020-05-26 18:34:56 INFO  Config:91 - Success!
2020-05-26 18:34:58 INFO  Config:44 - 
2020-05-26 18:34:58 INFO  Config:45 - 
2020-05-26 18:34:58 INFO  Config:46 - Test Case ID :TC_004 - Description :Test Register Account API with invalid name (less than 3 char)
2020-05-26 18:34:58 INFO  Config:51 - Status code => 403
2020-05-26 18:34:58 INFO  Config:52 - Content-type => application/json
2020-05-26 18:34:58 INFO  Config:53 - Response body => {"data":{},"message":["Invalid name format"],"status":"403"}
2020-05-26 18:34:58 INFO  Config:81 - Assert status code...
2020-05-26 18:34:58 INFO  Config:83 - Success!
2020-05-26 18:34:58 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:34:58 INFO  Config:86 - Success!
2020-05-26 18:34:58 INFO  Config:87 - Assert response body...
2020-05-26 18:34:58 INFO  Config:91 - Success!
2020-05-26 18:35:00 INFO  Config:44 - 
2020-05-26 18:35:00 INFO  Config:45 - 
2020-05-26 18:35:00 INFO  Config:46 - Test Case ID :TC_005 - Description :Test Register Account API with invalid name (more than 20 char)
2020-05-26 18:35:00 INFO  Config:51 - Status code => 403
2020-05-26 18:35:00 INFO  Config:52 - Content-type => application/json
2020-05-26 18:35:00 INFO  Config:53 - Response body => {"data":{},"message":["Invalid name format"],"status":"403"}
2020-05-26 18:35:00 INFO  Config:81 - Assert status code...
2020-05-26 18:35:00 INFO  Config:83 - Success!
2020-05-26 18:35:00 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:35:00 INFO  Config:86 - Success!
2020-05-26 18:35:00 INFO  Config:87 - Assert response body...
2020-05-26 18:35:00 INFO  Config:91 - Success!
2020-05-26 18:35:02 INFO  Config:44 - 
2020-05-26 18:35:02 INFO  Config:45 - 
2020-05-26 18:35:02 INFO  Config:46 - Test Case ID :TC_006 - Description :Test Register Account API with invalid name (contain digit)
2020-05-26 18:35:02 INFO  Config:51 - Status code => 403
2020-05-26 18:35:02 INFO  Config:52 - Content-type => application/json
2020-05-26 18:35:02 INFO  Config:53 - Response body => {"data":{},"message":["Invalid name format"],"status":"403"}
2020-05-26 18:35:02 INFO  Config:81 - Assert status code...
2020-05-26 18:35:02 INFO  Config:83 - Success!
2020-05-26 18:35:02 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:35:02 INFO  Config:86 - Success!
2020-05-26 18:35:02 INFO  Config:87 - Assert response body...
2020-05-26 18:35:02 INFO  Config:91 - Success!
2020-05-26 18:35:05 INFO  Config:44 - 
2020-05-26 18:35:05 INFO  Config:45 - 
2020-05-26 18:35:05 INFO  Config:46 - Test Case ID :TC_007 - Description :Test Register Account API with invalid name (contain symbol)
2020-05-26 18:35:05 INFO  Config:51 - Status code => 403
2020-05-26 18:35:05 INFO  Config:52 - Content-type => application/json
2020-05-26 18:35:05 INFO  Config:53 - Response body => {"data":{},"message":["Invalid name format"],"status":"403"}
2020-05-26 18:35:05 INFO  Config:81 - Assert status code...
2020-05-26 18:35:05 INFO  Config:83 - Success!
2020-05-26 18:35:05 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:35:05 INFO  Config:86 - Success!
2020-05-26 18:35:05 INFO  Config:87 - Assert response body...
2020-05-26 18:35:05 INFO  Config:91 - Success!
2020-05-26 18:35:06 INFO  Config:44 - 
2020-05-26 18:35:06 INFO  Config:45 - 
2020-05-26 18:35:06 INFO  Config:46 - Test Case ID :TC_008 - Description :Test Register Account API with invalid name (empty field)
2020-05-26 18:35:06 INFO  Config:51 - Status code => 403
2020-05-26 18:35:06 INFO  Config:52 - Content-type => application/json
2020-05-26 18:35:06 INFO  Config:53 - Response body => {"data":{},"message":["Invalid name format"],"status":"403"}
2020-05-26 18:35:06 INFO  Config:81 - Assert status code...
2020-05-26 18:35:06 INFO  Config:83 - Success!
2020-05-26 18:35:06 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:35:06 INFO  Config:86 - Success!
2020-05-26 18:35:06 INFO  Config:87 - Assert response body...
2020-05-26 18:35:06 INFO  Config:91 - Success!
2020-05-26 18:35:08 INFO  Config:44 - 
2020-05-26 18:35:08 INFO  Config:45 - 
2020-05-26 18:35:08 INFO  Config:46 - Test Case ID :TC_009 - Description :Test Register Account API with invalid email (missing domain name)
2020-05-26 18:35:08 INFO  Config:51 - Status code => 403
2020-05-26 18:35:08 INFO  Config:52 - Content-type => application/json
2020-05-26 18:35:08 INFO  Config:53 - Response body => {"data":{},"message":["Invalid email format"],"status":"403"}
2020-05-26 18:35:08 INFO  Config:81 - Assert status code...
2020-05-26 18:35:08 INFO  Config:83 - Success!
2020-05-26 18:35:08 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:35:08 INFO  Config:86 - Success!
2020-05-26 18:35:08 INFO  Config:87 - Assert response body...
2020-05-26 18:35:08 INFO  Config:91 - Success!
2020-05-26 18:35:10 INFO  Config:44 - 
2020-05-26 18:35:10 INFO  Config:45 - 
2020-05-26 18:35:10 INFO  Config:46 - Test Case ID :TC_010 - Description :Test Register Account API with invalid email (missing top level domain)
2020-05-26 18:35:10 INFO  Config:51 - Status code => 403
2020-05-26 18:35:10 INFO  Config:52 - Content-type => application/json
2020-05-26 18:35:10 INFO  Config:53 - Response body => {"data":{},"message":["Invalid email format"],"status":"403"}
2020-05-26 18:35:10 INFO  Config:81 - Assert status code...
2020-05-26 18:35:10 INFO  Config:83 - Success!
2020-05-26 18:35:10 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:35:10 INFO  Config:86 - Success!
2020-05-26 18:35:10 INFO  Config:87 - Assert response body...
2020-05-26 18:35:10 INFO  Config:91 - Success!
2020-05-26 18:35:11 INFO  Config:44 - 
2020-05-26 18:35:11 INFO  Config:45 - 
2020-05-26 18:35:11 INFO  Config:46 - Test Case ID :TC_011 - Description :Test Register Account API with invalid email (recepient name missing)
2020-05-26 18:35:11 INFO  Config:51 - Status code => 403
2020-05-26 18:35:11 INFO  Config:52 - Content-type => application/json
2020-05-26 18:35:11 INFO  Config:53 - Response body => {"data":{},"message":["Invalid email format"],"status":"403"}
2020-05-26 18:35:11 INFO  Config:81 - Assert status code...
2020-05-26 18:35:11 INFO  Config:83 - Success!
2020-05-26 18:35:11 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:35:11 INFO  Config:86 - Success!
2020-05-26 18:35:11 INFO  Config:87 - Assert response body...
2020-05-26 18:35:11 INFO  Config:91 - Success!
2020-05-26 18:35:13 INFO  Config:44 - 
2020-05-26 18:35:13 INFO  Config:45 - 
2020-05-26 18:35:13 INFO  Config:46 - Test Case ID :TC_012 - Description :Test Register Account API with invalid email (missing @ symbol)
2020-05-26 18:35:13 INFO  Config:51 - Status code => 403
2020-05-26 18:35:13 INFO  Config:52 - Content-type => application/json
2020-05-26 18:35:13 INFO  Config:53 - Response body => {"data":{},"message":["Invalid email format"],"status":"403"}
2020-05-26 18:35:13 INFO  Config:81 - Assert status code...
2020-05-26 18:35:13 INFO  Config:83 - Success!
2020-05-26 18:35:13 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:35:13 INFO  Config:86 - Success!
2020-05-26 18:35:13 INFO  Config:87 - Assert response body...
2020-05-26 18:35:13 INFO  Config:91 - Success!
2020-05-26 18:35:15 INFO  Config:44 - 
2020-05-26 18:35:15 INFO  Config:45 - 
2020-05-26 18:35:15 INFO  Config:46 - Test Case ID :TC_013 - Description :Test Register Account API with invalid email (double @ symbol)
2020-05-26 18:35:15 INFO  Config:51 - Status code => 403
2020-05-26 18:35:15 INFO  Config:52 - Content-type => application/json
2020-05-26 18:35:15 INFO  Config:53 - Response body => {"data":{},"message":["Invalid email format"],"status":"403"}
2020-05-26 18:35:15 INFO  Config:81 - Assert status code...
2020-05-26 18:35:15 INFO  Config:83 - Success!
2020-05-26 18:35:15 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:35:15 INFO  Config:86 - Success!
2020-05-26 18:35:15 INFO  Config:87 - Assert response body...
2020-05-26 18:35:15 INFO  Config:91 - Success!
2020-05-26 18:35:16 INFO  Config:44 - 
2020-05-26 18:35:16 INFO  Config:45 - 
2020-05-26 18:35:16 INFO  Config:46 - Test Case ID :TC_014 - Description :Test Register Account API with invalid email (contain whitespace)
2020-05-26 18:35:16 INFO  Config:51 - Status code => 403
2020-05-26 18:35:16 INFO  Config:52 - Content-type => application/json
2020-05-26 18:35:16 INFO  Config:53 - Response body => {"data":{},"message":["Invalid email format"],"status":"403"}
2020-05-26 18:35:16 INFO  Config:81 - Assert status code...
2020-05-26 18:35:16 INFO  Config:83 - Success!
2020-05-26 18:35:16 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:35:16 INFO  Config:86 - Success!
2020-05-26 18:35:16 INFO  Config:87 - Assert response body...
2020-05-26 18:35:16 INFO  Config:91 - Success!
2020-05-26 18:35:18 INFO  Config:44 - 
2020-05-26 18:35:18 INFO  Config:45 - 
2020-05-26 18:35:18 INFO  Config:46 - Test Case ID :TC_015 - Description :Test Register Account API with invalid email (empty field)
2020-05-26 18:35:18 INFO  Config:51 - Status code => 403
2020-05-26 18:35:18 INFO  Config:52 - Content-type => application/json
2020-05-26 18:35:18 INFO  Config:53 - Response body => {"data":{},"message":["Invalid email format"],"status":"403"}
2020-05-26 18:35:18 INFO  Config:81 - Assert status code...
2020-05-26 18:35:18 INFO  Config:83 - Success!
2020-05-26 18:35:18 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:35:18 INFO  Config:86 - Success!
2020-05-26 18:35:18 INFO  Config:87 - Assert response body...
2020-05-26 18:35:18 INFO  Config:91 - Success!
2020-05-26 18:35:20 INFO  Config:44 - 
2020-05-26 18:35:20 INFO  Config:45 - 
2020-05-26 18:35:20 INFO  Config:46 - Test Case ID :TC_016 - Description :Test Register Account API with invalid phone number (less than 9 digit)
2020-05-26 18:35:20 INFO  Config:51 - Status code => 403
2020-05-26 18:35:20 INFO  Config:52 - Content-type => application/json
2020-05-26 18:35:20 INFO  Config:53 - Response body => {"data":{},"message":["Invalid phone number format"],"status":"403"}
2020-05-26 18:35:20 INFO  Config:81 - Assert status code...
2020-05-26 18:35:20 INFO  Config:83 - Success!
2020-05-26 18:35:20 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:35:20 INFO  Config:86 - Success!
2020-05-26 18:35:20 INFO  Config:87 - Assert response body...
2020-05-26 18:35:20 INFO  Config:91 - Success!
2020-05-26 18:35:22 INFO  Config:44 - 
2020-05-26 18:35:22 INFO  Config:45 - 
2020-05-26 18:35:22 INFO  Config:46 - Test Case ID :TC_017 - Description :Test Register Account API with invalid phone number (more than 12 digit)
2020-05-26 18:35:22 INFO  Config:51 - Status code => 201
2020-05-26 18:35:22 INFO  Config:52 - Content-type => application/json
2020-05-26 18:35:22 INFO  Config:53 - Response body => {"data":{"idUser":347,"name":"Muhammad Yogie","email":"yoginugrohoo2@gmail.com","password":"Password123@","phoneNumber":"8383383383567","balance":200000.0,"token":4587},"message":"Account has successfully created","status":"201"}
2020-05-26 18:35:24 INFO  Config:81 - Assert status code...
2020-05-26 18:35:26 INFO  Config:44 - 
2020-05-26 18:35:26 INFO  Config:45 - 
2020-05-26 18:35:26 INFO  Config:46 - Test Case ID :TC_018 - Description :Test Register Account API with invalid phone number (contain symbol)
2020-05-26 18:35:26 INFO  Config:51 - Status code => 403
2020-05-26 18:35:26 INFO  Config:52 - Content-type => application/json
2020-05-26 18:35:26 INFO  Config:53 - Response body => {"data":{},"message":["Invalid phone number format"],"status":"403"}
2020-05-26 18:35:26 INFO  Config:81 - Assert status code...
2020-05-26 18:35:26 INFO  Config:83 - Success!
2020-05-26 18:35:26 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:35:26 INFO  Config:86 - Success!
2020-05-26 18:35:26 INFO  Config:87 - Assert response body...
2020-05-26 18:35:26 INFO  Config:91 - Success!
2020-05-26 18:35:27 INFO  Config:44 - 
2020-05-26 18:35:27 INFO  Config:45 - 
2020-05-26 18:35:27 INFO  Config:46 - Test Case ID :TC_019 - Description :Test Register Account API with invalid phone number (contain alphabet)
2020-05-26 18:35:27 INFO  Config:51 - Status code => 403
2020-05-26 18:35:27 INFO  Config:52 - Content-type => application/json
2020-05-26 18:35:27 INFO  Config:53 - Response body => {"data":{},"message":["Invalid phone number format"],"status":"403"}
2020-05-26 18:35:27 INFO  Config:81 - Assert status code...
2020-05-26 18:35:27 INFO  Config:83 - Success!
2020-05-26 18:35:27 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:35:27 INFO  Config:86 - Success!
2020-05-26 18:35:27 INFO  Config:87 - Assert response body...
2020-05-26 18:35:27 INFO  Config:91 - Success!
2020-05-26 18:35:29 INFO  Config:44 - 
2020-05-26 18:35:29 INFO  Config:45 - 
2020-05-26 18:35:29 INFO  Config:46 - Test Case ID :TC_020 - Description :Test Register Account API with invalid phone number (contain whitespace)
2020-05-26 18:35:29 INFO  Config:51 - Status code => 403
2020-05-26 18:35:29 INFO  Config:52 - Content-type => application/json
2020-05-26 18:35:29 INFO  Config:53 - Response body => {"data":{},"message":["Invalid phone number format"],"status":"403"}
2020-05-26 18:35:29 INFO  Config:81 - Assert status code...
2020-05-26 18:35:29 INFO  Config:83 - Success!
2020-05-26 18:35:29 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:35:29 INFO  Config:86 - Success!
2020-05-26 18:35:29 INFO  Config:87 - Assert response body...
2020-05-26 18:35:29 INFO  Config:91 - Success!
2020-05-26 18:35:30 INFO  Config:44 - 
2020-05-26 18:35:30 INFO  Config:45 - 
2020-05-26 18:35:30 INFO  Config:46 - Test Case ID :TC_021 - Description :Test Register Account API with invalid phone number (empty field)
2020-05-26 18:35:31 INFO  Config:51 - Status code => 403
2020-05-26 18:35:31 INFO  Config:52 - Content-type => application/json
2020-05-26 18:35:31 INFO  Config:53 - Response body => {"data":{},"message":["Invalid phone number format"],"status":"403"}
2020-05-26 18:35:31 INFO  Config:81 - Assert status code...
2020-05-26 18:35:31 INFO  Config:83 - Success!
2020-05-26 18:35:31 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:35:31 INFO  Config:86 - Success!
2020-05-26 18:35:31 INFO  Config:87 - Assert response body...
2020-05-26 18:35:31 INFO  Config:91 - Success!
2020-05-26 18:35:32 INFO  Config:44 - 
2020-05-26 18:35:32 INFO  Config:45 - 
2020-05-26 18:35:32 INFO  Config:46 - Test Case ID :TC_022 - Description :Test Register Account API with invalid password (less than 8 char)
2020-05-26 18:35:32 INFO  Config:51 - Status code => 403
2020-05-26 18:35:32 INFO  Config:52 - Content-type => application/json
2020-05-26 18:35:32 INFO  Config:53 - Response body => {"data":{},"message":["Invalid password format"],"status":"403"}
2020-05-26 18:35:32 INFO  Config:81 - Assert status code...
2020-05-26 18:35:32 INFO  Config:83 - Success!
2020-05-26 18:35:32 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:35:32 INFO  Config:86 - Success!
2020-05-26 18:35:32 INFO  Config:87 - Assert response body...
2020-05-26 18:35:32 INFO  Config:91 - Success!
2020-05-26 18:35:33 INFO  Config:44 - 
2020-05-26 18:35:33 INFO  Config:45 - 
2020-05-26 18:35:33 INFO  Config:46 - Test Case ID :TC_023 - Description :Test Register Account API with invalid password (more than 20 char)
2020-05-26 18:35:33 INFO  Config:51 - Status code => 403
2020-05-26 18:35:33 INFO  Config:52 - Content-type => application/json
2020-05-26 18:35:33 INFO  Config:53 - Response body => {"data":{},"message":["Invalid password format"],"status":"403"}
2020-05-26 18:35:33 INFO  Config:81 - Assert status code...
2020-05-26 18:35:33 INFO  Config:83 - Success!
2020-05-26 18:35:33 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:35:33 INFO  Config:86 - Success!
2020-05-26 18:35:33 INFO  Config:87 - Assert response body...
2020-05-26 18:35:33 INFO  Config:91 - Success!
2020-05-26 18:35:35 INFO  Config:44 - 
2020-05-26 18:35:35 INFO  Config:45 - 
2020-05-26 18:35:35 INFO  Config:46 - Test Case ID :TC_024 - Description :Test Register Account API with invalid password (no digit)
2020-05-26 18:35:35 INFO  Config:51 - Status code => 403
2020-05-26 18:35:35 INFO  Config:52 - Content-type => application/json
2020-05-26 18:35:35 INFO  Config:53 - Response body => {"data":{},"message":["Invalid password format"],"status":"403"}
2020-05-26 18:35:35 INFO  Config:81 - Assert status code...
2020-05-26 18:35:35 INFO  Config:83 - Success!
2020-05-26 18:35:35 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:35:35 INFO  Config:86 - Success!
2020-05-26 18:35:35 INFO  Config:87 - Assert response body...
2020-05-26 18:35:35 INFO  Config:91 - Success!
2020-05-26 18:35:37 INFO  Config:44 - 
2020-05-26 18:35:37 INFO  Config:45 - 
2020-05-26 18:35:37 INFO  Config:46 - Test Case ID :TC_025 - Description :Test Register Account API with invalid password (no uppercase)
2020-05-26 18:35:37 INFO  Config:51 - Status code => 403
2020-05-26 18:35:37 INFO  Config:52 - Content-type => application/json
2020-05-26 18:35:37 INFO  Config:53 - Response body => {"data":{},"message":["Invalid password format"],"status":"403"}
2020-05-26 18:35:37 INFO  Config:81 - Assert status code...
2020-05-26 18:35:37 INFO  Config:83 - Success!
2020-05-26 18:35:37 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:35:37 INFO  Config:86 - Success!
2020-05-26 18:35:37 INFO  Config:87 - Assert response body...
2020-05-26 18:35:37 INFO  Config:91 - Success!
2020-05-26 18:35:38 INFO  Config:44 - 
2020-05-26 18:35:38 INFO  Config:45 - 
2020-05-26 18:35:38 INFO  Config:46 - Test Case ID :TC_026 - Description :Test Register Account API with invalid password (no lowercase)
2020-05-26 18:35:38 INFO  Config:51 - Status code => 403
2020-05-26 18:35:38 INFO  Config:52 - Content-type => application/json
2020-05-26 18:35:38 INFO  Config:53 - Response body => {"data":{},"message":["Invalid password format"],"status":"403"}
2020-05-26 18:35:38 INFO  Config:81 - Assert status code...
2020-05-26 18:35:38 INFO  Config:83 - Success!
2020-05-26 18:35:38 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:35:38 INFO  Config:86 - Success!
2020-05-26 18:35:38 INFO  Config:87 - Assert response body...
2020-05-26 18:35:38 INFO  Config:91 - Success!
2020-05-26 18:35:40 INFO  Config:44 - 
2020-05-26 18:35:40 INFO  Config:45 - 
2020-05-26 18:35:40 INFO  Config:46 - Test Case ID :TC_027 - Description :Test Register Account API with invalid password (no symbol)
2020-05-26 18:35:40 INFO  Config:51 - Status code => 403
2020-05-26 18:35:40 INFO  Config:52 - Content-type => application/json
2020-05-26 18:35:40 INFO  Config:53 - Response body => {"data":{},"message":["Invalid password format"],"status":"403"}
2020-05-26 18:35:40 INFO  Config:81 - Assert status code...
2020-05-26 18:35:40 INFO  Config:83 - Success!
2020-05-26 18:35:40 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:35:40 INFO  Config:86 - Success!
2020-05-26 18:35:40 INFO  Config:87 - Assert response body...
2020-05-26 18:35:40 INFO  Config:91 - Success!
2020-05-26 18:35:41 INFO  Config:44 - 
2020-05-26 18:35:41 INFO  Config:45 - 
2020-05-26 18:35:41 INFO  Config:46 - Test Case ID :TC_028 - Description :Test Register Account API with invalid password (contain whitespace)
2020-05-26 18:35:41 INFO  Config:51 - Status code => 403
2020-05-26 18:35:41 INFO  Config:52 - Content-type => application/json
2020-05-26 18:35:41 INFO  Config:53 - Response body => {"data":{},"message":["Invalid password format"],"status":"403"}
2020-05-26 18:35:41 INFO  Config:81 - Assert status code...
2020-05-26 18:35:41 INFO  Config:83 - Success!
2020-05-26 18:35:41 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:35:41 INFO  Config:86 - Success!
2020-05-26 18:35:41 INFO  Config:87 - Assert response body...
2020-05-26 18:35:41 INFO  Config:91 - Success!
2020-05-26 18:35:43 INFO  Config:44 - 
2020-05-26 18:35:43 INFO  Config:45 - 
2020-05-26 18:35:43 INFO  Config:46 - Test Case ID :TC_029 - Description :Test Register Account API with invalid password (empty)
2020-05-26 18:35:43 INFO  Config:51 - Status code => 403
2020-05-26 18:35:43 INFO  Config:52 - Content-type => application/json
2020-05-26 18:35:43 INFO  Config:53 - Response body => {"data":{},"message":["Invalid password format"],"status":"403"}
2020-05-26 18:35:43 INFO  Config:81 - Assert status code...
2020-05-26 18:35:43 INFO  Config:83 - Success!
2020-05-26 18:35:43 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:35:43 INFO  Config:86 - Success!
2020-05-26 18:35:43 INFO  Config:87 - Assert response body...
2020-05-26 18:35:43 INFO  Config:91 - Success!
2020-05-26 18:35:44 INFO  Config:23 - 
2020-05-26 18:35:44 INFO  Config:24 - =====TS_002 Login=====
2020-05-26 18:35:46 INFO  Config:41 - 
2020-05-26 18:35:46 INFO  Config:42 - 
2020-05-26 18:35:46 INFO  Config:43 - Test Case ID :TC_030 - Description :Test Login Account API with positive path (user exist, phone number true and password true)
2020-05-26 18:35:46 INFO  Config:48 - Status code => 200
2020-05-26 18:35:46 INFO  Config:49 - Content-type => application/json
2020-05-26 18:35:46 INFO  Config:50 - Response body => {"idUser":346,"message":"success","token":4479,"status":"200"}
2020-05-26 18:35:46 INFO  Config:53 - Assert status code...
2020-05-26 18:35:46 INFO  Config:55 - Success!
2020-05-26 18:35:46 INFO  Config:56 - Assert Content-Type...
2020-05-26 18:35:46 INFO  Config:58 - Success!
2020-05-26 18:35:46 INFO  Config:59 - Assert response body...
2020-05-26 18:35:46 INFO  Config:65 - success!
2020-05-26 18:35:48 INFO  Config:41 - 
2020-05-26 18:35:48 INFO  Config:42 - 
2020-05-26 18:35:48 INFO  Config:43 - Test Case ID :TC_031 - Description :Test Login Account API if user already login
2020-05-26 18:35:48 INFO  Config:48 - Status code => 404
2020-05-26 18:35:48 INFO  Config:49 - Content-type => application/json
2020-05-26 18:35:48 INFO  Config:50 - Response body => {"data":{},"message":"User is already logged in","status":"404"}
2020-05-26 18:35:48 INFO  Config:68 - Assert status code...
2020-05-26 18:35:48 INFO  Config:70 - Success!
2020-05-26 18:35:48 INFO  Config:71 - Assert Content-Type...
2020-05-26 18:35:48 INFO  Config:73 - Success!
2020-05-26 18:35:48 INFO  Config:74 - Assert response body...
2020-05-26 18:35:48 INFO  Config:78 - Success!
2020-05-26 18:35:49 INFO  Config:41 - 
2020-05-26 18:35:49 INFO  Config:42 - 
2020-05-26 18:35:49 INFO  Config:43 - Test Case ID :TC_032 - Description :Test Login Account API if user exist,  phone number true but password false
2020-05-26 18:35:49 INFO  Config:48 - Status code => 403
2020-05-26 18:35:49 INFO  Config:49 - Content-type => application/json
2020-05-26 18:35:49 INFO  Config:50 - Response body => {"data":{},"message":"Phone number or password wrong","status":"403"}
2020-05-26 18:35:49 INFO  Config:68 - Assert status code...
2020-05-26 18:35:49 INFO  Config:70 - Success!
2020-05-26 18:35:49 INFO  Config:71 - Assert Content-Type...
2020-05-26 18:35:49 INFO  Config:73 - Success!
2020-05-26 18:35:49 INFO  Config:74 - Assert response body...
2020-05-26 18:35:49 INFO  Config:78 - Success!
2020-05-26 18:35:51 INFO  Config:41 - 
2020-05-26 18:35:51 INFO  Config:42 - 
2020-05-26 18:35:51 INFO  Config:43 - Test Case ID :TC_033 - Description :Test Login Account API if user exist,  phone number false but password true
2020-05-26 18:35:51 INFO  Config:48 - Status code => 403
2020-05-26 18:35:51 INFO  Config:49 - Content-type => application/json
2020-05-26 18:35:51 INFO  Config:50 - Response body => {"data":{},"message":"Phone number or password wrong","status":"403"}
2020-05-26 18:35:51 INFO  Config:68 - Assert status code...
2020-05-26 18:35:51 INFO  Config:70 - Success!
2020-05-26 18:35:51 INFO  Config:71 - Assert Content-Type...
2020-05-26 18:35:51 INFO  Config:73 - Success!
2020-05-26 18:35:51 INFO  Config:74 - Assert response body...
2020-05-26 18:35:51 INFO  Config:78 - Success!
2020-05-26 18:35:52 INFO  Config:41 - 
2020-05-26 18:35:52 INFO  Config:42 - 
2020-05-26 18:35:52 INFO  Config:43 - Test Case ID :TC_034 - Description :Test Login Account API if user not exist
2020-05-26 18:35:52 INFO  Config:48 - Status code => 403
2020-05-26 18:35:52 INFO  Config:49 - Content-type => application/json
2020-05-26 18:35:52 INFO  Config:50 - Response body => {"data":{},"message":"Phone number or password wrong","status":"403"}
2020-05-26 18:35:52 INFO  Config:68 - Assert status code...
2020-05-26 18:35:52 INFO  Config:70 - Success!
2020-05-26 18:35:52 INFO  Config:71 - Assert Content-Type...
2020-05-26 18:35:52 INFO  Config:73 - Success!
2020-05-26 18:35:52 INFO  Config:74 - Assert response body...
2020-05-26 18:35:52 INFO  Config:78 - Success!
2020-05-26 18:35:54 INFO  Config:41 - 
2020-05-26 18:35:54 INFO  Config:42 - 
2020-05-26 18:35:54 INFO  Config:43 - Test Case ID :TC_035 - Description :Test Login Account API with invalid phone number (less than 9 digit)
2020-05-26 18:35:54 INFO  Config:48 - Status code => 403
2020-05-26 18:35:54 INFO  Config:49 - Content-type => application/json
2020-05-26 18:35:54 INFO  Config:50 - Response body => {"data":{},"message":["Invalid phone number format"],"status":"403"}
2020-05-26 18:35:54 INFO  Config:68 - Assert status code...
2020-05-26 18:35:54 INFO  Config:70 - Success!
2020-05-26 18:35:54 INFO  Config:71 - Assert Content-Type...
2020-05-26 18:35:54 INFO  Config:73 - Success!
2020-05-26 18:35:54 INFO  Config:74 - Assert response body...
2020-05-26 18:35:54 INFO  Config:78 - Success!
2020-05-26 18:35:55 INFO  Config:41 - 
2020-05-26 18:35:55 INFO  Config:42 - 
2020-05-26 18:35:55 INFO  Config:43 - Test Case ID :TC_036 - Description :Test Login Account API with invalid phone number (more than 12 digit)
2020-05-26 18:35:55 INFO  Config:48 - Status code => 403
2020-05-26 18:35:55 INFO  Config:49 - Content-type => application/json
2020-05-26 18:35:55 INFO  Config:50 - Response body => {"data":{},"message":"Phone number or password wrong","status":"403"}
2020-05-26 18:35:55 INFO  Config:68 - Assert status code...
2020-05-26 18:35:55 INFO  Config:70 - Success!
2020-05-26 18:35:55 INFO  Config:71 - Assert Content-Type...
2020-05-26 18:35:55 INFO  Config:73 - Success!
2020-05-26 18:35:55 INFO  Config:74 - Assert response body...
2020-05-26 18:35:57 INFO  Config:41 - 
2020-05-26 18:35:57 INFO  Config:42 - 
2020-05-26 18:35:57 INFO  Config:43 - Test Case ID :TC_037 - Description :Test Login Account API with invalid phone number (contain symbol)
2020-05-26 18:35:57 INFO  Config:48 - Status code => 403
2020-05-26 18:35:57 INFO  Config:49 - Content-type => application/json
2020-05-26 18:35:57 INFO  Config:50 - Response body => {"data":{},"message":["Invalid phone number format"],"status":"403"}
2020-05-26 18:35:57 INFO  Config:68 - Assert status code...
2020-05-26 18:35:57 INFO  Config:70 - Success!
2020-05-26 18:35:57 INFO  Config:71 - Assert Content-Type...
2020-05-26 18:35:57 INFO  Config:73 - Success!
2020-05-26 18:35:57 INFO  Config:74 - Assert response body...
2020-05-26 18:35:57 INFO  Config:78 - Success!
2020-05-26 18:35:58 INFO  Config:41 - 
2020-05-26 18:35:58 INFO  Config:42 - 
2020-05-26 18:35:58 INFO  Config:43 - Test Case ID :TC_038 - Description :Test Login Account API with invalid phone number (contain alphabet)
2020-05-26 18:35:58 INFO  Config:48 - Status code => 403
2020-05-26 18:35:58 INFO  Config:49 - Content-type => application/json
2020-05-26 18:35:58 INFO  Config:50 - Response body => {"data":{},"message":["Invalid phone number format"],"status":"403"}
2020-05-26 18:35:58 INFO  Config:68 - Assert status code...
2020-05-26 18:35:58 INFO  Config:70 - Success!
2020-05-26 18:35:58 INFO  Config:71 - Assert Content-Type...
2020-05-26 18:35:58 INFO  Config:73 - Success!
2020-05-26 18:35:58 INFO  Config:74 - Assert response body...
2020-05-26 18:35:58 INFO  Config:78 - Success!
2020-05-26 18:36:00 INFO  Config:41 - 
2020-05-26 18:36:00 INFO  Config:42 - 
2020-05-26 18:36:00 INFO  Config:43 - Test Case ID :TC_039 - Description :Test Login Account API with invalid phone number (contain whitespace)
2020-05-26 18:36:00 INFO  Config:48 - Status code => 403
2020-05-26 18:36:00 INFO  Config:49 - Content-type => application/json
2020-05-26 18:36:00 INFO  Config:50 - Response body => {"data":{},"message":["Invalid phone number format"],"status":"403"}
2020-05-26 18:36:00 INFO  Config:68 - Assert status code...
2020-05-26 18:36:00 INFO  Config:70 - Success!
2020-05-26 18:36:00 INFO  Config:71 - Assert Content-Type...
2020-05-26 18:36:00 INFO  Config:73 - Success!
2020-05-26 18:36:00 INFO  Config:74 - Assert response body...
2020-05-26 18:36:00 INFO  Config:78 - Success!
2020-05-26 18:36:01 INFO  Config:41 - 
2020-05-26 18:36:01 INFO  Config:42 - 
2020-05-26 18:36:01 INFO  Config:43 - Test Case ID :TC_040 - Description :Test Login Account API with invalid phone number (empty field)
2020-05-26 18:36:01 INFO  Config:48 - Status code => 403
2020-05-26 18:36:01 INFO  Config:49 - Content-type => application/json
2020-05-26 18:36:01 INFO  Config:50 - Response body => {"data":{},"message":["Invalid phone number format"],"status":"403"}
2020-05-26 18:36:01 INFO  Config:68 - Assert status code...
2020-05-26 18:36:01 INFO  Config:70 - Success!
2020-05-26 18:36:01 INFO  Config:71 - Assert Content-Type...
2020-05-26 18:36:01 INFO  Config:73 - Success!
2020-05-26 18:36:01 INFO  Config:74 - Assert response body...
2020-05-26 18:36:01 INFO  Config:78 - Success!
2020-05-26 18:36:02 INFO  Config:41 - 
2020-05-26 18:36:02 INFO  Config:42 - 
2020-05-26 18:36:02 INFO  Config:43 - Test Case ID :TC_041 - Description :Test Login Account API with invalid password (less than 8 char)
2020-05-26 18:36:02 INFO  Config:48 - Status code => 403
2020-05-26 18:36:02 INFO  Config:49 - Content-type => application/json
2020-05-26 18:36:02 INFO  Config:50 - Response body => {"data":{},"message":["Invalid password format"],"status":"403"}
2020-05-26 18:36:02 INFO  Config:68 - Assert status code...
2020-05-26 18:36:02 INFO  Config:70 - Success!
2020-05-26 18:36:02 INFO  Config:71 - Assert Content-Type...
2020-05-26 18:36:02 INFO  Config:73 - Success!
2020-05-26 18:36:02 INFO  Config:74 - Assert response body...
2020-05-26 18:36:02 INFO  Config:78 - Success!
2020-05-26 18:36:04 INFO  Config:41 - 
2020-05-26 18:36:04 INFO  Config:42 - 
2020-05-26 18:36:04 INFO  Config:43 - Test Case ID :TC_042 - Description :Test Login Account API with invalid password (more than 20 char)
2020-05-26 18:36:04 INFO  Config:48 - Status code => 403
2020-05-26 18:36:04 INFO  Config:49 - Content-type => application/json
2020-05-26 18:36:04 INFO  Config:50 - Response body => {"data":{},"message":["Invalid password format"],"status":"403"}
2020-05-26 18:36:04 INFO  Config:68 - Assert status code...
2020-05-26 18:36:04 INFO  Config:70 - Success!
2020-05-26 18:36:04 INFO  Config:71 - Assert Content-Type...
2020-05-26 18:36:04 INFO  Config:73 - Success!
2020-05-26 18:36:04 INFO  Config:74 - Assert response body...
2020-05-26 18:36:04 INFO  Config:78 - Success!
2020-05-26 18:36:06 INFO  Config:41 - 
2020-05-26 18:36:06 INFO  Config:42 - 
2020-05-26 18:36:06 INFO  Config:43 - Test Case ID :TC_043 - Description :Test Login Account API with invalid password (no digit)
2020-05-26 18:36:06 INFO  Config:48 - Status code => 403
2020-05-26 18:36:06 INFO  Config:49 - Content-type => application/json
2020-05-26 18:36:06 INFO  Config:50 - Response body => {"data":{},"message":["Invalid password format"],"status":"403"}
2020-05-26 18:36:06 INFO  Config:68 - Assert status code...
2020-05-26 18:36:06 INFO  Config:70 - Success!
2020-05-26 18:36:06 INFO  Config:71 - Assert Content-Type...
2020-05-26 18:36:06 INFO  Config:73 - Success!
2020-05-26 18:36:06 INFO  Config:74 - Assert response body...
2020-05-26 18:36:06 INFO  Config:78 - Success!
2020-05-26 18:36:08 INFO  Config:41 - 
2020-05-26 18:36:08 INFO  Config:42 - 
2020-05-26 18:36:08 INFO  Config:43 - Test Case ID :TC_044 - Description :Test Login Account API with invalid password (no uppercase)
2020-05-26 18:36:08 INFO  Config:48 - Status code => 403
2020-05-26 18:36:08 INFO  Config:49 - Content-type => application/json
2020-05-26 18:36:08 INFO  Config:50 - Response body => {"data":{},"message":["Invalid password format"],"status":"403"}
2020-05-26 18:36:08 INFO  Config:68 - Assert status code...
2020-05-26 18:36:08 INFO  Config:70 - Success!
2020-05-26 18:36:08 INFO  Config:71 - Assert Content-Type...
2020-05-26 18:36:08 INFO  Config:73 - Success!
2020-05-26 18:36:08 INFO  Config:74 - Assert response body...
2020-05-26 18:36:08 INFO  Config:78 - Success!
2020-05-26 18:36:10 INFO  Config:41 - 
2020-05-26 18:36:10 INFO  Config:42 - 
2020-05-26 18:36:10 INFO  Config:43 - Test Case ID :TC_045 - Description :Test Login Account API with invalid password (no lowercase)
2020-05-26 18:36:10 INFO  Config:48 - Status code => 403
2020-05-26 18:36:10 INFO  Config:49 - Content-type => application/json
2020-05-26 18:36:10 INFO  Config:50 - Response body => {"data":{},"message":["Invalid password format"],"status":"403"}
2020-05-26 18:36:10 INFO  Config:68 - Assert status code...
2020-05-26 18:36:10 INFO  Config:70 - Success!
2020-05-26 18:36:10 INFO  Config:71 - Assert Content-Type...
2020-05-26 18:36:10 INFO  Config:73 - Success!
2020-05-26 18:36:10 INFO  Config:74 - Assert response body...
2020-05-26 18:36:10 INFO  Config:78 - Success!
2020-05-26 18:36:11 INFO  Config:41 - 
2020-05-26 18:36:11 INFO  Config:42 - 
2020-05-26 18:36:11 INFO  Config:43 - Test Case ID :TC_046 - Description :Test Login Account API with invalid password (no symbol)
2020-05-26 18:36:11 INFO  Config:48 - Status code => 403
2020-05-26 18:36:11 INFO  Config:49 - Content-type => application/json
2020-05-26 18:36:11 INFO  Config:50 - Response body => {"data":{},"message":["Invalid password format"],"status":"403"}
2020-05-26 18:36:11 INFO  Config:68 - Assert status code...
2020-05-26 18:36:11 INFO  Config:70 - Success!
2020-05-26 18:36:11 INFO  Config:71 - Assert Content-Type...
2020-05-26 18:36:11 INFO  Config:73 - Success!
2020-05-26 18:36:11 INFO  Config:74 - Assert response body...
2020-05-26 18:36:11 INFO  Config:78 - Success!
2020-05-26 18:36:13 INFO  Config:41 - 
2020-05-26 18:36:13 INFO  Config:42 - 
2020-05-26 18:36:13 INFO  Config:43 - Test Case ID :TC_047 - Description :Test Login Account API with invalid password (contain whitespace)
2020-05-26 18:36:13 INFO  Config:48 - Status code => 403
2020-05-26 18:36:13 INFO  Config:49 - Content-type => application/json
2020-05-26 18:36:13 INFO  Config:50 - Response body => {"data":{},"message":["Invalid password format"],"status":"403"}
2020-05-26 18:36:13 INFO  Config:68 - Assert status code...
2020-05-26 18:36:13 INFO  Config:70 - Success!
2020-05-26 18:36:13 INFO  Config:71 - Assert Content-Type...
2020-05-26 18:36:13 INFO  Config:73 - Success!
2020-05-26 18:36:13 INFO  Config:74 - Assert response body...
2020-05-26 18:36:13 INFO  Config:78 - Success!
2020-05-26 18:36:15 INFO  Config:41 - 
2020-05-26 18:36:15 INFO  Config:42 - 
2020-05-26 18:36:15 INFO  Config:43 - Test Case ID :TC_048 - Description :Test Login Account API with invalid password (empty)
2020-05-26 18:36:15 INFO  Config:48 - Status code => 403
2020-05-26 18:36:15 INFO  Config:49 - Content-type => application/json
2020-05-26 18:36:15 INFO  Config:50 - Response body => {"data":{},"message":["Invalid password format"],"status":"403"}
2020-05-26 18:36:15 INFO  Config:68 - Assert status code...
2020-05-26 18:36:15 INFO  Config:70 - Success!
2020-05-26 18:36:15 INFO  Config:71 - Assert Content-Type...
2020-05-26 18:36:15 INFO  Config:73 - Success!
2020-05-26 18:36:15 INFO  Config:74 - Assert response body...
2020-05-26 18:36:15 INFO  Config:78 - Success!
2020-05-26 18:36:15 INFO  Config:19 - 
2020-05-26 18:36:15 INFO  Config:20 - =====TS_003 Send OTP=====
2020-05-26 18:36:17 INFO  Config:38 - 
2020-05-26 18:36:17 INFO  Config:39 - 
2020-05-26 18:36:17 INFO  Config:40 - Test Case ID :TC_049 - Description :Test Send OTP API if user exist, phone number true & email true 
2020-05-26 18:36:17 INFO  Config:45 - Status code => 500
2020-05-26 18:36:17 INFO  Config:46 - Content-type => application/json
2020-05-26 18:36:17 INFO  Config:47 - Response body => {"timestamp":"2020-05-26T11:36:17.416+0000","status":500,"error":"Internal Server Error","message":"Authenticate","path":"/api/paystore/user/otp"}
2020-05-26 18:36:17 INFO  Config:50 - Assert status code...
2020-05-26 18:36:19 INFO  Config:38 - 
2020-05-26 18:36:19 INFO  Config:39 - 
2020-05-26 18:36:19 INFO  Config:40 - Test Case ID :TC_050 - Description :Test Send OTP API if user exist, phone number false but email true
2020-05-26 18:36:19 INFO  Config:45 - Status code => 500
2020-05-26 18:36:19 INFO  Config:46 - Content-type => application/json
2020-05-26 18:36:19 INFO  Config:47 - Response body => {"timestamp":"2020-05-26T11:36:18.996+0000","status":500,"error":"Internal Server Error","message":"Authenticate","path":"/api/paystore/user/otp"}
2020-05-26 18:36:19 INFO  Config:50 - Assert status code...
2020-05-26 18:36:20 INFO  Config:38 - 
2020-05-26 18:36:20 INFO  Config:39 - 
2020-05-26 18:36:20 INFO  Config:40 - Test Case ID :TC_051 - Description :Test Send OTP API if user exist, phone number true but email false
2020-05-26 18:36:20 INFO  Config:45 - Status code => 500
2020-05-26 18:36:20 INFO  Config:46 - Content-type => application/json
2020-05-26 18:36:20 INFO  Config:47 - Response body => {"timestamp":"2020-05-26T11:36:20.524+0000","status":500,"error":"Internal Server Error","message":"Authenticate","path":"/api/paystore/user/otp"}
2020-05-26 18:36:20 INFO  Config:50 - Assert status code...
2020-05-26 18:36:23 INFO  Config:38 - 
2020-05-26 18:36:23 INFO  Config:39 - 
2020-05-26 18:36:23 INFO  Config:40 - Test Case ID :TC_052 - Description :Test Send OTP API if user not exist
2020-05-26 18:36:23 INFO  Config:45 - Status code => 500
2020-05-26 18:36:23 INFO  Config:46 - Content-type => application/json
2020-05-26 18:36:23 INFO  Config:47 - Response body => {"timestamp":"2020-05-26T11:36:22.752+0000","status":500,"error":"Internal Server Error","message":"Authenticate","path":"/api/paystore/user/otp"}
2020-05-26 18:36:23 INFO  Config:50 - Assert status code...
2020-05-26 18:36:24 INFO  Config:38 - 
2020-05-26 18:36:24 INFO  Config:39 - 
2020-05-26 18:36:24 INFO  Config:40 - Test Case ID :TC_053 - Description :Test Send OTP API with invalid phone number (less than 9 digit)
2020-05-26 18:36:24 INFO  Config:45 - Status code => 403
2020-05-26 18:36:24 INFO  Config:46 - Content-type => application/json
2020-05-26 18:36:24 INFO  Config:47 - Response body => {"data":{},"message":["Invalid phone number format"],"status":"403"}
2020-05-26 18:36:24 INFO  Config:64 - Assert status code...
2020-05-26 18:36:24 INFO  Config:66 - Success!
2020-05-26 18:36:24 INFO  Config:67 - Assert Content-Type...
2020-05-26 18:36:24 INFO  Config:69 - Success!
2020-05-26 18:36:24 INFO  Config:70 - Assert response body...
2020-05-26 18:36:24 INFO  Config:74 - Success!
2020-05-26 18:36:26 INFO  Config:38 - 
2020-05-26 18:36:26 INFO  Config:39 - 
2020-05-26 18:36:26 INFO  Config:40 - Test Case ID :TC_054 - Description :Test Send OTP API with invalid phone number (more than 12 digit)
2020-05-26 18:36:26 INFO  Config:45 - Status code => 500
2020-05-26 18:36:26 INFO  Config:46 - Content-type => application/json
2020-05-26 18:36:26 INFO  Config:47 - Response body => {"timestamp":"2020-05-26T11:36:26.294+0000","status":500,"error":"Internal Server Error","message":"Authenticate","path":"/api/paystore/user/otp"}
2020-05-26 18:36:26 INFO  Config:64 - Assert status code...
2020-05-26 18:36:28 INFO  Config:38 - 
2020-05-26 18:36:28 INFO  Config:39 - 
2020-05-26 18:36:28 INFO  Config:40 - Test Case ID :TC_055 - Description :Test Send OTP API with invalid phone number (contain symbol)
2020-05-26 18:36:28 INFO  Config:45 - Status code => 403
2020-05-26 18:36:28 INFO  Config:46 - Content-type => application/json
2020-05-26 18:36:28 INFO  Config:47 - Response body => {"data":{},"message":["Invalid phone number format"],"status":"403"}
2020-05-26 18:36:28 INFO  Config:64 - Assert status code...
2020-05-26 18:36:28 INFO  Config:66 - Success!
2020-05-26 18:36:28 INFO  Config:67 - Assert Content-Type...
2020-05-26 18:36:28 INFO  Config:69 - Success!
2020-05-26 18:36:28 INFO  Config:70 - Assert response body...
2020-05-26 18:36:28 INFO  Config:74 - Success!
2020-05-26 18:36:30 INFO  Config:38 - 
2020-05-26 18:36:30 INFO  Config:39 - 
2020-05-26 18:36:30 INFO  Config:40 - Test Case ID :TC_056 - Description :Test Send OTP API with invalid phone number (contain alphabet)
2020-05-26 18:36:30 INFO  Config:45 - Status code => 403
2020-05-26 18:36:30 INFO  Config:46 - Content-type => application/json
2020-05-26 18:36:30 INFO  Config:47 - Response body => {"data":{},"message":["Invalid phone number format"],"status":"403"}
2020-05-26 18:36:30 INFO  Config:64 - Assert status code...
2020-05-26 18:36:30 INFO  Config:66 - Success!
2020-05-26 18:36:30 INFO  Config:67 - Assert Content-Type...
2020-05-26 18:36:30 INFO  Config:69 - Success!
2020-05-26 18:36:30 INFO  Config:70 - Assert response body...
2020-05-26 18:36:30 INFO  Config:74 - Success!
2020-05-26 18:36:33 INFO  Config:38 - 
2020-05-26 18:36:33 INFO  Config:39 - 
2020-05-26 18:36:33 INFO  Config:40 - Test Case ID :TC_057 - Description :Test Send OTP API with invalid phone number (contain whitespace)
2020-05-26 18:36:33 INFO  Config:45 - Status code => 403
2020-05-26 18:36:33 INFO  Config:46 - Content-type => application/json
2020-05-26 18:36:33 INFO  Config:47 - Response body => {"data":{},"message":["Invalid phone number format"],"status":"403"}
2020-05-26 18:36:33 INFO  Config:64 - Assert status code...
2020-05-26 18:36:33 INFO  Config:66 - Success!
2020-05-26 18:36:33 INFO  Config:67 - Assert Content-Type...
2020-05-26 18:36:33 INFO  Config:69 - Success!
2020-05-26 18:36:33 INFO  Config:70 - Assert response body...
2020-05-26 18:36:33 INFO  Config:74 - Success!
2020-05-26 18:36:34 INFO  Config:38 - 
2020-05-26 18:36:34 INFO  Config:39 - 
2020-05-26 18:36:34 INFO  Config:40 - Test Case ID :TC_058 - Description :Test Send OTP API with invalid phone number (empty field)
2020-05-26 18:36:34 INFO  Config:45 - Status code => 403
2020-05-26 18:36:34 INFO  Config:46 - Content-type => application/json
2020-05-26 18:36:34 INFO  Config:47 - Response body => {"data":{},"message":["Invalid phone number format"],"status":"403"}
2020-05-26 18:36:34 INFO  Config:64 - Assert status code...
2020-05-26 18:36:34 INFO  Config:66 - Success!
2020-05-26 18:36:34 INFO  Config:67 - Assert Content-Type...
2020-05-26 18:36:34 INFO  Config:69 - Success!
2020-05-26 18:36:34 INFO  Config:70 - Assert response body...
2020-05-26 18:36:34 INFO  Config:74 - Success!
2020-05-26 18:36:35 INFO  Config:38 - 
2020-05-26 18:36:35 INFO  Config:39 - 
2020-05-26 18:36:35 INFO  Config:40 - Test Case ID :TC_059 - Description :Test Send OTP API with invalid email (missing domain name)
2020-05-26 18:36:35 INFO  Config:45 - Status code => 403
2020-05-26 18:36:35 INFO  Config:46 - Content-type => application/json
2020-05-26 18:36:35 INFO  Config:47 - Response body => {"data":{},"message":["Invalid email format"],"status":"403"}
2020-05-26 18:36:35 INFO  Config:64 - Assert status code...
2020-05-26 18:36:35 INFO  Config:66 - Success!
2020-05-26 18:36:35 INFO  Config:67 - Assert Content-Type...
2020-05-26 18:36:35 INFO  Config:69 - Success!
2020-05-26 18:36:35 INFO  Config:70 - Assert response body...
2020-05-26 18:36:35 INFO  Config:74 - Success!
2020-05-26 18:36:37 INFO  Config:38 - 
2020-05-26 18:36:37 INFO  Config:39 - 
2020-05-26 18:36:37 INFO  Config:40 - Test Case ID :TC_060 - Description :Test Send OTP API with invalid email (missing top level domain)
2020-05-26 18:36:37 INFO  Config:45 - Status code => 403
2020-05-26 18:36:37 INFO  Config:46 - Content-type => application/json
2020-05-26 18:36:37 INFO  Config:47 - Response body => {"data":{},"message":["Invalid email format"],"status":"403"}
2020-05-26 18:36:37 INFO  Config:64 - Assert status code...
2020-05-26 18:36:37 INFO  Config:66 - Success!
2020-05-26 18:36:37 INFO  Config:67 - Assert Content-Type...
2020-05-26 18:36:37 INFO  Config:69 - Success!
2020-05-26 18:36:37 INFO  Config:70 - Assert response body...
2020-05-26 18:36:37 INFO  Config:74 - Success!
2020-05-26 18:36:38 INFO  Config:38 - 
2020-05-26 18:36:38 INFO  Config:39 - 
2020-05-26 18:36:38 INFO  Config:40 - Test Case ID :TC_061 - Description :Test Send OTP API with invalid email (recepient name missing)
2020-05-26 18:36:38 INFO  Config:45 - Status code => 403
2020-05-26 18:36:38 INFO  Config:46 - Content-type => application/json
2020-05-26 18:36:38 INFO  Config:47 - Response body => {"data":{},"message":["Invalid email format"],"status":"403"}
2020-05-26 18:36:38 INFO  Config:64 - Assert status code...
2020-05-26 18:36:38 INFO  Config:66 - Success!
2020-05-26 18:36:38 INFO  Config:67 - Assert Content-Type...
2020-05-26 18:36:38 INFO  Config:69 - Success!
2020-05-26 18:36:38 INFO  Config:70 - Assert response body...
2020-05-26 18:36:38 INFO  Config:74 - Success!
2020-05-26 18:36:41 INFO  Config:38 - 
2020-05-26 18:36:41 INFO  Config:39 - 
2020-05-26 18:36:41 INFO  Config:40 - Test Case ID :TC_062 - Description :Test Send OTP API with invalid email (missing @ symbol)
2020-05-26 18:36:41 INFO  Config:45 - Status code => 403
2020-05-26 18:36:41 INFO  Config:46 - Content-type => application/json
2020-05-26 18:36:41 INFO  Config:47 - Response body => {"data":{},"message":["Invalid email format"],"status":"403"}
2020-05-26 18:36:41 INFO  Config:64 - Assert status code...
2020-05-26 18:36:41 INFO  Config:66 - Success!
2020-05-26 18:36:41 INFO  Config:67 - Assert Content-Type...
2020-05-26 18:36:41 INFO  Config:69 - Success!
2020-05-26 18:36:41 INFO  Config:70 - Assert response body...
2020-05-26 18:36:41 INFO  Config:74 - Success!
2020-05-26 18:36:43 INFO  Config:38 - 
2020-05-26 18:36:43 INFO  Config:39 - 
2020-05-26 18:36:43 INFO  Config:40 - Test Case ID :TC_063 - Description :Test Send OTP API with invalid email (double @ symbol)
2020-05-26 18:36:43 INFO  Config:45 - Status code => 403
2020-05-26 18:36:43 INFO  Config:46 - Content-type => application/json
2020-05-26 18:36:43 INFO  Config:47 - Response body => {"data":{},"message":["Invalid email format"],"status":"403"}
2020-05-26 18:36:43 INFO  Config:64 - Assert status code...
2020-05-26 18:36:43 INFO  Config:66 - Success!
2020-05-26 18:36:43 INFO  Config:67 - Assert Content-Type...
2020-05-26 18:36:43 INFO  Config:69 - Success!
2020-05-26 18:36:43 INFO  Config:70 - Assert response body...
2020-05-26 18:36:43 INFO  Config:74 - Success!
2020-05-26 18:36:44 INFO  Config:38 - 
2020-05-26 18:36:44 INFO  Config:39 - 
2020-05-26 18:36:44 INFO  Config:40 - Test Case ID :TC_064 - Description :Test Send OTP API with invalid email (contain whitespace)
2020-05-26 18:36:44 INFO  Config:45 - Status code => 403
2020-05-26 18:36:44 INFO  Config:46 - Content-type => application/json
2020-05-26 18:36:44 INFO  Config:47 - Response body => {"data":{},"message":["Invalid email format"],"status":"403"}
2020-05-26 18:36:44 INFO  Config:64 - Assert status code...
2020-05-26 18:36:44 INFO  Config:66 - Success!
2020-05-26 18:36:44 INFO  Config:67 - Assert Content-Type...
2020-05-26 18:36:44 INFO  Config:69 - Success!
2020-05-26 18:36:44 INFO  Config:70 - Assert response body...
2020-05-26 18:36:44 INFO  Config:74 - Success!
2020-05-26 18:36:46 INFO  Config:38 - 
2020-05-26 18:36:46 INFO  Config:39 - 
2020-05-26 18:36:46 INFO  Config:40 - Test Case ID :TC_065 - Description :Test Send OTP API with invalid email (empty field)
2020-05-26 18:36:46 INFO  Config:45 - Status code => 403
2020-05-26 18:36:46 INFO  Config:46 - Content-type => application/json
2020-05-26 18:36:46 INFO  Config:47 - Response body => {"data":{},"message":["Invalid email format"],"status":"403"}
2020-05-26 18:36:46 INFO  Config:64 - Assert status code...
2020-05-26 18:36:46 INFO  Config:66 - Success!
2020-05-26 18:36:46 INFO  Config:67 - Assert Content-Type...
2020-05-26 18:36:46 INFO  Config:69 - Success!
2020-05-26 18:36:46 INFO  Config:70 - Assert response body...
2020-05-26 18:36:46 INFO  Config:74 - Success!
2020-05-26 18:36:46 INFO  Config:20 - 
2020-05-26 18:36:46 INFO  Config:21 - =====TS_004 Get User Profile=====
2020-05-26 18:36:46 INFO  Config:37 - 
2020-05-26 18:36:46 INFO  Config:38 - 
2020-05-26 18:36:46 INFO  Config:39 - Test Case ID :TC_066 - Description :Test Get User Profile API if user exist
2020-05-26 18:36:48 INFO  Config:52 - Status code => 200
2020-05-26 18:36:48 INFO  Config:53 - Content-type => application/json
2020-05-26 18:36:48 INFO  Config:54 - Response body => {"data":{"idUser":346,"name":"Muhammad Yogie","email":"yoginugrohoo@gmail.com","password":"Password123@","phoneNumber":"83833833834","balance":200000.0,"token":4479},"message":"User profile has successfully sent","status":"200"}
2020-05-26 18:36:48 INFO  Config:57 - Assert status code...
2020-05-26 18:36:48 INFO  Config:59 - Success!
2020-05-26 18:36:48 INFO  Config:60 - Assert Content-Type...
2020-05-26 18:36:48 INFO  Config:62 - Success!
2020-05-26 18:36:48 INFO  Config:63 - Assert response body...
2020-05-26 18:36:48 INFO  Config:74 - success!
2020-05-26 18:36:48 INFO  Config:37 - 
2020-05-26 18:36:48 INFO  Config:38 - 
2020-05-26 18:36:48 INFO  Config:39 - Test Case ID :TC_067 - Description :Test Get User Profile API if user not exist
2020-05-26 18:36:49 INFO  Config:52 - Status code => 404
2020-05-26 18:36:49 INFO  Config:53 - Content-type => application/json
2020-05-26 18:36:49 INFO  Config:54 - Response body => {"data":{},"message":"User not found","status":"404"}
2020-05-26 18:36:49 INFO  Config:90 - Assert status code...
2020-05-26 18:36:49 INFO  Config:92 - Success!
2020-05-26 18:36:49 INFO  Config:93 - Assert Content-Type...
2020-05-26 18:36:49 INFO  Config:95 - Success!
2020-05-26 18:36:49 INFO  Config:96 - Assert response body...
2020-05-26 18:36:49 INFO  Config:100 - Success!
2020-05-26 18:36:49 INFO  Config:37 - 
2020-05-26 18:36:49 INFO  Config:38 - 
2020-05-26 18:36:49 INFO  Config:39 - Test Case ID :TC_068 - Description :Test Get User Profile API with invalid user id (contain alphabet)
2020-05-26 18:36:51 INFO  Config:52 - Status code => 400
2020-05-26 18:36:51 INFO  Config:53 - Content-type => application/json
2020-05-26 18:36:51 INFO  Config:54 - Response body => {"timestamp":"2020-05-26T11:36:51.211+0000","status":400,"error":"Bad Request","message":"JSON parse error: Cannot deserialize value of type `long` from String \"a\": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `long` from String \"a\": not a valid Long value\n at [Source: (PushbackInputStream); line: 1, column: 11] (through reference chain: com.paystore.model.User[\"idUser\"])","path":"/api/paystore/user/profile"}
2020-05-26 18:36:51 INFO  Config:77 - Assert status code...
2020-05-26 18:36:51 INFO  Config:79 - Success!
2020-05-26 18:36:51 INFO  Config:80 - Assert Content-Type...
2020-05-26 18:36:51 INFO  Config:82 - Success!
2020-05-26 18:36:51 INFO  Config:83 - Assert response body...
2020-05-26 18:36:51 INFO  Config:87 - Success!
2020-05-26 18:36:51 INFO  Config:37 - 
2020-05-26 18:36:51 INFO  Config:38 - 
2020-05-26 18:36:51 INFO  Config:39 - Test Case ID :TC_069 - Description :Test Get User Profile API with invalid user id (contain symbol)
2020-05-26 18:36:52 INFO  Config:52 - Status code => 400
2020-05-26 18:36:52 INFO  Config:53 - Content-type => application/json
2020-05-26 18:36:52 INFO  Config:54 - Response body => {"timestamp":"2020-05-26T11:36:52.662+0000","status":400,"error":"Bad Request","message":"JSON parse error: Cannot deserialize value of type `long` from String \"@\": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `long` from String \"@\": not a valid Long value\n at [Source: (PushbackInputStream); line: 1, column: 11] (through reference chain: com.paystore.model.User[\"idUser\"])","path":"/api/paystore/user/profile"}
2020-05-26 18:36:52 INFO  Config:77 - Assert status code...
2020-05-26 18:36:52 INFO  Config:79 - Success!
2020-05-26 18:36:52 INFO  Config:80 - Assert Content-Type...
2020-05-26 18:36:52 INFO  Config:82 - Success!
2020-05-26 18:36:52 INFO  Config:83 - Assert response body...
2020-05-26 18:36:52 INFO  Config:87 - Success!
2020-05-26 18:36:52 INFO  Config:37 - 
2020-05-26 18:36:52 INFO  Config:38 - 
2020-05-26 18:36:52 INFO  Config:39 - Test Case ID :TC_070 - Description :Test Get User Profile API with invalid user id (empty)
2020-05-26 18:36:54 INFO  Config:52 - Status code => 404
2020-05-26 18:36:54 INFO  Config:53 - Content-type => application/json
2020-05-26 18:36:54 INFO  Config:54 - Response body => {"data":{},"message":"User not found","status":"404"}
2020-05-26 18:36:54 INFO  Config:90 - Assert status code...
2020-05-26 18:36:54 INFO  Config:92 - Success!
2020-05-26 18:36:54 INFO  Config:93 - Assert Content-Type...
2020-05-26 18:36:54 INFO  Config:95 - Success!
2020-05-26 18:36:54 INFO  Config:96 - Assert response body...
2020-05-26 18:36:54 INFO  Config:100 - Success!
2020-05-26 18:36:54 INFO  Config:22 - 
2020-05-26 18:36:54 INFO  Config:23 - =====TS_005 Get Unpaid Bill=====
2020-05-26 18:37:18 INFO  Config:58 - 
2020-05-26 18:37:18 INFO  Config:59 - 
2020-05-26 18:37:18 INFO  Config:60 - Test Case ID :TS_071 - Description :Test Get Telephone Bills API with positive test path (Registered Phone Number, have billing)
2020-05-26 18:37:18 INFO  Config:65 - Status code => 200
2020-05-26 18:37:18 INFO  Config:66 - Content-type => application/json
2020-05-26 18:37:18 INFO  Config:67 - Response body => {"data":{"idBill":463,"telephoneOwner":"Mat Murdock","telephoneNumber":"02233333333","month":"February","amount":75000.0,"status":"unpaid"},"message":"Bill has successfully sent","status":"200"}
2020-05-26 18:37:18 INFO  Config:70 - Assert status code...
2020-05-26 18:37:18 INFO  Config:72 - Success!
2020-05-26 18:37:18 INFO  Config:73 - Assert Content-Type...
2020-05-26 18:37:18 INFO  Config:75 - Success!
2020-05-26 18:37:18 INFO  Config:76 - Assert response body...
2020-05-26 18:37:18 INFO  Config:86 - success!
2020-05-26 18:37:21 INFO  Config:58 - 
2020-05-26 18:37:21 INFO  Config:59 - 
2020-05-26 18:37:21 INFO  Config:60 - Test Case ID :TS_072 - Description :Test Get Telephone Bills API with positive test path (Registered Phone Number, 1 paid billing, 1 unpaid billing)
2020-05-26 18:37:21 INFO  Config:65 - Status code => 200
2020-05-26 18:37:21 INFO  Config:66 - Content-type => application/json
2020-05-26 18:37:21 INFO  Config:67 - Response body => {"data":{"idBill":465,"telephoneOwner":"Foggy Nelson","telephoneNumber":"02244444444","month":"March","amount":75000.0,"status":"unpaid"},"message":"Bill has successfully sent","status":"200"}
2020-05-26 18:37:21 INFO  Config:70 - Assert status code...
2020-05-26 18:37:21 INFO  Config:72 - Success!
2020-05-26 18:37:21 INFO  Config:73 - Assert Content-Type...
2020-05-26 18:37:21 INFO  Config:75 - Success!
2020-05-26 18:37:21 INFO  Config:76 - Assert response body...
2020-05-26 18:37:21 INFO  Config:86 - success!
2020-05-26 18:37:23 INFO  Config:58 - 
2020-05-26 18:37:23 INFO  Config:59 - 
2020-05-26 18:37:23 INFO  Config:60 - Test Case ID :TS_073 - Description :Test Get Telephone Bills API with positive test path (Registered Phone Number, 2 paid billing, 1 unpaid billing)
2020-05-26 18:37:23 INFO  Config:65 - Status code => 200
2020-05-26 18:37:23 INFO  Config:66 - Content-type => application/json
2020-05-26 18:37:23 INFO  Config:67 - Response body => {"data":{"idBill":470,"telephoneOwner":"Karen Page","telephoneNumber":"02266666666","month":"April","amount":75000.0,"status":"unpaid"},"message":"Bill has successfully sent","status":"200"}
2020-05-26 18:37:23 INFO  Config:70 - Assert status code...
2020-05-26 18:37:23 INFO  Config:72 - Success!
2020-05-26 18:37:23 INFO  Config:73 - Assert Content-Type...
2020-05-26 18:37:23 INFO  Config:75 - Success!
2020-05-26 18:37:23 INFO  Config:76 - Assert response body...
2020-05-26 18:37:23 INFO  Config:86 - success!
2020-05-26 18:37:24 INFO  Config:58 - 
2020-05-26 18:37:24 INFO  Config:59 - 
2020-05-26 18:37:24 INFO  Config:60 - Test Case ID :TS_074 - Description :Test Get Telephone Bills API with positive test path (Registered Phone Number, 2 paid billing, 2 unpaid billing)
2020-05-26 18:37:24 INFO  Config:65 - Status code => 200
2020-05-26 18:37:24 INFO  Config:66 - Content-type => application/json
2020-05-26 18:37:24 INFO  Config:67 - Response body => {"data":{"idBill":474,"telephoneOwner":"Greyson Ace","telephoneNumber":"02277777777","month":"May","amount":75000.0,"status":"unpaid"},"message":"Bill has successfully sent","status":"200"}
2020-05-26 18:37:24 INFO  Config:70 - Assert status code...
2020-05-26 18:37:24 INFO  Config:72 - Success!
2020-05-26 18:37:24 INFO  Config:73 - Assert Content-Type...
2020-05-26 18:37:24 INFO  Config:75 - Success!
2020-05-26 18:37:24 INFO  Config:76 - Assert response body...
2020-05-26 18:37:24 INFO  Config:86 - success!
2020-05-26 18:37:26 INFO  Config:58 - 
2020-05-26 18:37:26 INFO  Config:59 - 
2020-05-26 18:37:26 INFO  Config:60 - Test Case ID :TS_075 - Description :Test Get Telephone Bills API with negative test (valid data, phone number not registered)
2020-05-26 18:37:26 INFO  Config:65 - Status code => 404
2020-05-26 18:37:26 INFO  Config:66 - Content-type => application/json
2020-05-26 18:37:26 INFO  Config:67 - Response body => {"data":{},"message":"Bill not found","status":"404"}
2020-05-26 18:37:26 INFO  Config:89 - Assert status code...
2020-05-26 18:37:26 INFO  Config:91 - Success!
2020-05-26 18:37:26 INFO  Config:92 - Assert Content-Type...
2020-05-26 18:37:26 INFO  Config:94 - Success!
2020-05-26 18:37:26 INFO  Config:95 - Assert response body...
2020-05-26 18:37:26 INFO  Config:99 - Success!
2020-05-26 18:37:27 INFO  Config:58 - 
2020-05-26 18:37:27 INFO  Config:59 - 
2020-05-26 18:37:27 INFO  Config:60 - Test Case ID :TS_076 - Description :Test Get Telephone Bills API with negative test (valid data, phone number registered but no billing)
2020-05-26 18:37:27 INFO  Config:65 - Status code => 404
2020-05-26 18:37:27 INFO  Config:66 - Content-type => application/json
2020-05-26 18:37:27 INFO  Config:67 - Response body => {"data":{},"message":"Bill not found","status":"404"}
2020-05-26 18:37:27 INFO  Config:89 - Assert status code...
2020-05-26 18:37:27 INFO  Config:91 - Success!
2020-05-26 18:37:27 INFO  Config:92 - Assert Content-Type...
2020-05-26 18:37:27 INFO  Config:94 - Success!
2020-05-26 18:37:27 INFO  Config:95 - Assert response body...
2020-05-26 18:37:27 INFO  Config:99 - Success!
2020-05-26 18:37:29 INFO  Config:58 - 
2020-05-26 18:37:29 INFO  Config:59 - 
2020-05-26 18:37:29 INFO  Config:60 - Test Case ID :TS_077 - Description :Test Get Telephone Bills API with negative test (Registered Phone Number, 2 paid billing, 0 unpaid billing)
2020-05-26 18:37:29 INFO  Config:65 - Status code => 404
2020-05-26 18:37:29 INFO  Config:66 - Content-type => application/json
2020-05-26 18:37:29 INFO  Config:67 - Response body => {"data":{},"message":"Bill not found","status":"404"}
2020-05-26 18:37:29 INFO  Config:89 - Assert status code...
2020-05-26 18:37:29 INFO  Config:91 - Success!
2020-05-26 18:37:29 INFO  Config:92 - Assert Content-Type...
2020-05-26 18:37:29 INFO  Config:94 - Success!
2020-05-26 18:37:29 INFO  Config:95 - Assert response body...
2020-05-26 18:37:29 INFO  Config:99 - Success!
2020-05-26 18:37:30 INFO  Config:58 - 
2020-05-26 18:37:30 INFO  Config:59 - 
2020-05-26 18:37:30 INFO  Config:60 - Test Case ID :TS_078 - Description :Test Get Telephone Bills API with invalid phone number (less than 8 digit)
2020-05-26 18:37:30 INFO  Config:65 - Status code => 403
2020-05-26 18:37:30 INFO  Config:66 - Content-type => application/json
2020-05-26 18:37:30 INFO  Config:67 - Response body => {"data":{},"message":"Invalid phone number format","status":"403"}
2020-05-26 18:37:30 INFO  Config:89 - Assert status code...
2020-05-26 18:37:30 INFO  Config:91 - Success!
2020-05-26 18:37:30 INFO  Config:92 - Assert Content-Type...
2020-05-26 18:37:30 INFO  Config:94 - Success!
2020-05-26 18:37:30 INFO  Config:95 - Assert response body...
2020-05-26 18:37:30 INFO  Config:99 - Success!
2020-05-26 18:37:32 INFO  Config:58 - 
2020-05-26 18:37:32 INFO  Config:59 - 
2020-05-26 18:37:32 INFO  Config:60 - Test Case ID :TS_079 - Description :Test Get Telephone Bills API with invalid phone number (more than than 13 digit)
2020-05-26 18:37:32 INFO  Config:65 - Status code => 403
2020-05-26 18:37:32 INFO  Config:66 - Content-type => application/json
2020-05-26 18:37:32 INFO  Config:67 - Response body => {"data":{},"message":"Invalid phone number format","status":"403"}
2020-05-26 18:37:32 INFO  Config:89 - Assert status code...
2020-05-26 18:37:32 INFO  Config:91 - Success!
2020-05-26 18:37:32 INFO  Config:92 - Assert Content-Type...
2020-05-26 18:37:32 INFO  Config:94 - Success!
2020-05-26 18:37:32 INFO  Config:95 - Assert response body...
2020-05-26 18:37:32 INFO  Config:99 - Success!
2020-05-26 18:37:33 INFO  Config:58 - 
2020-05-26 18:37:33 INFO  Config:59 - 
2020-05-26 18:37:33 INFO  Config:60 - Test Case ID :TS_081 - Description :Test Get Telephone Bills API with invalid phone number (contain symbol)
2020-05-26 18:37:33 INFO  Config:65 - Status code => 403
2020-05-26 18:37:33 INFO  Config:66 - Content-type => application/json
2020-05-26 18:37:33 INFO  Config:67 - Response body => {"data":{},"message":"Invalid phone number format","status":"403"}
2020-05-26 18:37:33 INFO  Config:89 - Assert status code...
2020-05-26 18:37:33 INFO  Config:91 - Success!
2020-05-26 18:37:33 INFO  Config:92 - Assert Content-Type...
2020-05-26 18:37:33 INFO  Config:94 - Success!
2020-05-26 18:37:33 INFO  Config:95 - Assert response body...
2020-05-26 18:37:33 INFO  Config:99 - Success!
2020-05-26 18:37:35 INFO  Config:58 - 
2020-05-26 18:37:35 INFO  Config:59 - 
2020-05-26 18:37:35 INFO  Config:60 - Test Case ID :TS_082 - Description :Test Get Telephone Bills API with invalid phone number (contain alphabet)
2020-05-26 18:37:35 INFO  Config:65 - Status code => 403
2020-05-26 18:37:35 INFO  Config:66 - Content-type => application/json
2020-05-26 18:37:35 INFO  Config:67 - Response body => {"data":{},"message":"Invalid phone number format","status":"403"}
2020-05-26 18:37:35 INFO  Config:89 - Assert status code...
2020-05-26 18:37:35 INFO  Config:91 - Success!
2020-05-26 18:37:35 INFO  Config:92 - Assert Content-Type...
2020-05-26 18:37:35 INFO  Config:94 - Success!
2020-05-26 18:37:35 INFO  Config:95 - Assert response body...
2020-05-26 18:37:35 INFO  Config:99 - Success!
2020-05-26 18:37:36 INFO  Config:58 - 
2020-05-26 18:37:36 INFO  Config:59 - 
2020-05-26 18:37:36 INFO  Config:60 - Test Case ID :TS_080 - Description :Test Get Telephone Bills API with invalid phone number (contain whitespace)
2020-05-26 18:37:36 INFO  Config:65 - Status code => 403
2020-05-26 18:37:36 INFO  Config:66 - Content-type => application/json
2020-05-26 18:37:36 INFO  Config:67 - Response body => {"data":{},"message":"Invalid phone number format","status":"403"}
2020-05-26 18:37:36 INFO  Config:89 - Assert status code...
2020-05-26 18:37:36 INFO  Config:91 - Success!
2020-05-26 18:37:36 INFO  Config:92 - Assert Content-Type...
2020-05-26 18:37:36 INFO  Config:94 - Success!
2020-05-26 18:37:36 INFO  Config:95 - Assert response body...
2020-05-26 18:37:36 INFO  Config:99 - Success!
2020-05-26 18:37:37 INFO  Config:58 - 
2020-05-26 18:37:37 INFO  Config:59 - 
2020-05-26 18:37:37 INFO  Config:60 - Test Case ID :TS_083 - Description :Test Get Telephone Bills API with invalid phone number (empty)
2020-05-26 18:37:38 INFO  Config:65 - Status code => 403
2020-05-26 18:37:38 INFO  Config:66 - Content-type => application/json
2020-05-26 18:37:38 INFO  Config:67 - Response body => {"data":{},"message":"Invalid phone number format","status":"403"}
2020-05-26 18:37:38 INFO  Config:89 - Assert status code...
2020-05-26 18:37:38 INFO  Config:91 - Success!
2020-05-26 18:37:38 INFO  Config:92 - Assert Content-Type...
2020-05-26 18:37:38 INFO  Config:94 - Success!
2020-05-26 18:37:38 INFO  Config:95 - Assert response body...
2020-05-26 18:37:38 INFO  Config:99 - Success!
2020-05-26 18:37:38 INFO  Config:25 - 
2020-05-26 18:37:38 INFO  Config:26 - =====TS_006 Insert Payment=====
2020-05-26 18:37:48 INFO  Config:58 - 
2020-05-26 18:37:48 INFO  Config:59 - 
2020-05-26 18:37:48 INFO  Config:60 - Test Case ID :TS_084 - Description :Test Insert Payment API with positive test path (pay with wallet balance)
2020-05-26 18:37:52 INFO  Config:79 - Status code => 201
2020-05-26 18:37:52 INFO  Config:80 - Content-type => application/json
2020-05-26 18:37:52 INFO  Config:81 - Response body => {"data":{},"message":"Payment Pending","status":"201"}
2020-05-26 18:37:52 INFO  Config:84 - Assert status code...
2020-05-26 18:37:52 INFO  Config:86 - Success!
2020-05-26 18:37:52 INFO  Config:87 - Assert Content-Type...
2020-05-26 18:37:52 INFO  Config:89 - Success!
2020-05-26 18:37:52 INFO  Config:90 - Assert response body...
2020-05-26 18:37:52 INFO  Config:94 - success!
2020-05-26 18:37:52 INFO  Config:110 - Assert status code...
2020-05-26 18:37:52 INFO  Config:112 - Success!
2020-05-26 18:37:52 INFO  Config:113 - Assert Content-Type...
2020-05-26 18:37:52 INFO  Config:115 - Success!
2020-05-26 18:37:52 INFO  Config:116 - Assert response body...
2020-05-26 18:37:52 INFO  Config:120 - Success!
2020-05-26 18:37:52 INFO  Config:58 - 
2020-05-26 18:37:52 INFO  Config:59 - 
2020-05-26 18:37:52 INFO  Config:60 - Test Case ID :TS_085 - Description :Test Insert Payment API with positive test path (pay with wallet bank transfer)
2020-05-26 18:37:55 INFO  Config:79 - Status code => 201
2020-05-26 18:37:55 INFO  Config:80 - Content-type => application/json
2020-05-26 18:37:55 INFO  Config:81 - Response body => {"data":{},"message":"Payment Pending","status":"201"}
2020-05-26 18:37:55 INFO  Config:84 - Assert status code...
2020-05-26 18:37:55 INFO  Config:86 - Success!
2020-05-26 18:37:55 INFO  Config:87 - Assert Content-Type...
2020-05-26 18:37:55 INFO  Config:89 - Success!
2020-05-26 18:37:55 INFO  Config:90 - Assert response body...
2020-05-26 18:37:55 INFO  Config:94 - success!
2020-05-26 18:37:55 INFO  Config:110 - Assert status code...
2020-05-26 18:37:55 INFO  Config:112 - Success!
2020-05-26 18:37:55 INFO  Config:113 - Assert Content-Type...
2020-05-26 18:37:55 INFO  Config:115 - Success!
2020-05-26 18:37:55 INFO  Config:116 - Assert response body...
2020-05-26 18:37:55 INFO  Config:120 - Success!
2020-05-26 18:37:55 INFO  Config:58 - 
2020-05-26 18:37:55 INFO  Config:59 - 
2020-05-26 18:37:55 INFO  Config:60 - Test Case ID :TS_086 - Description :Test Insert Payment API with unrecognized payment method
2020-05-26 18:37:58 INFO  Config:79 - Status code => 404
2020-05-26 18:37:58 INFO  Config:80 - Content-type => application/json
2020-05-26 18:37:58 INFO  Config:81 - Response body => {"data":{},"message":"Payment method not found","status":"404"}
2020-05-26 18:37:58 INFO  Config:110 - Assert status code...
2020-05-26 18:37:58 INFO  Config:112 - Success!
2020-05-26 18:37:58 INFO  Config:113 - Assert Content-Type...
2020-05-26 18:37:58 INFO  Config:115 - Success!
2020-05-26 18:37:58 INFO  Config:116 - Assert response body...
2020-05-26 18:37:58 INFO  Config:120 - Success!
2020-05-26 18:37:58 INFO  Config:58 - 
2020-05-26 18:37:58 INFO  Config:59 - 
2020-05-26 18:37:58 INFO  Config:60 - Test Case ID :TS_087 - Description :Test Insert Payment API with unregistered bill
2020-05-26 18:38:02 INFO  Config:79 - Status code => 404
2020-05-26 18:38:02 INFO  Config:80 - Content-type => application/json
2020-05-26 18:38:02 INFO  Config:81 - Response body => {"data":{},"message":"Bill not found","status":"404"}
2020-05-26 18:38:02 INFO  Config:110 - Assert status code...
2020-05-26 18:38:02 INFO  Config:112 - Success!
2020-05-26 18:38:02 INFO  Config:113 - Assert Content-Type...
2020-05-26 18:38:02 INFO  Config:115 - Success!
2020-05-26 18:38:02 INFO  Config:116 - Assert response body...
2020-05-26 18:38:02 INFO  Config:120 - Success!
2020-05-26 18:38:02 INFO  Config:58 - 
2020-05-26 18:38:02 INFO  Config:59 - 
2020-05-26 18:38:02 INFO  Config:60 - Test Case ID :TS_088 - Description :Test Insert Payment API with unregistered user
2020-05-26 18:38:04 INFO  Config:79 - Status code => 404
2020-05-26 18:38:04 INFO  Config:80 - Content-type => application/json
2020-05-26 18:38:04 INFO  Config:81 - Response body => {"data":{},"message":"User not found","status":"404"}
2020-05-26 18:38:04 INFO  Config:110 - Assert status code...
2020-05-26 18:38:04 INFO  Config:112 - Success!
2020-05-26 18:38:04 INFO  Config:113 - Assert Content-Type...
2020-05-26 18:38:04 INFO  Config:115 - Success!
2020-05-26 18:38:04 INFO  Config:116 - Assert response body...
2020-05-26 18:38:04 INFO  Config:120 - Success!
2020-05-26 18:38:04 INFO  Config:58 - 
2020-05-26 18:38:04 INFO  Config:59 - 
2020-05-26 18:38:04 INFO  Config:60 - Test Case ID :TS_089 - Description :Test Insert Payment API if user already insert payment (method : wallet balance)
2020-05-26 18:38:06 INFO  Config:79 - Status code => 403
2020-05-26 18:38:06 INFO  Config:80 - Content-type => application/json
2020-05-26 18:38:06 INFO  Config:81 - Response body => {"data":{},"message":"Pay your bill to finish the transaction","status":"403"}
2020-05-26 18:38:06 INFO  Config:110 - Assert status code...
2020-05-26 18:38:06 INFO  Config:112 - Success!
2020-05-26 18:38:06 INFO  Config:113 - Assert Content-Type...
2020-05-26 18:38:06 INFO  Config:115 - Success!
2020-05-26 18:38:06 INFO  Config:116 - Assert response body...
2020-05-26 18:38:06 INFO  Config:58 - 
2020-05-26 18:38:06 INFO  Config:59 - 
2020-05-26 18:38:06 INFO  Config:60 - Test Case ID :TS_090 - Description :Test Insert Payment API if user already insert payment (method : bank transfer)
2020-05-26 18:38:10 INFO  Config:79 - Status code => 403
2020-05-26 18:38:10 INFO  Config:80 - Content-type => application/json
2020-05-26 18:38:10 INFO  Config:81 - Response body => {"data":{},"message":"Pay your bill to finish the transaction","status":"403"}
2020-05-26 18:38:10 INFO  Config:110 - Assert status code...
2020-05-26 18:38:10 INFO  Config:112 - Success!
2020-05-26 18:38:10 INFO  Config:113 - Assert Content-Type...
2020-05-26 18:38:10 INFO  Config:115 - Success!
2020-05-26 18:38:10 INFO  Config:116 - Assert response body...
2020-05-26 18:38:10 INFO  Config:58 - 
2020-05-26 18:38:10 INFO  Config:59 - 
2020-05-26 18:38:10 INFO  Config:60 - Test Case ID :TS_091 - Description :Test Insert Payment API if wallet balance less than total amount billing
2020-05-26 18:38:13 INFO  Config:79 - Status code => 403
2020-05-26 18:38:13 INFO  Config:80 - Content-type => application/json
2020-05-26 18:38:13 INFO  Config:81 - Response body => {"data":{},"message":"Insufficient balance please top up","status":"403"}
2020-05-26 18:38:13 INFO  Config:110 - Assert status code...
2020-05-26 18:38:13 INFO  Config:112 - Success!
2020-05-26 18:38:13 INFO  Config:113 - Assert Content-Type...
2020-05-26 18:38:13 INFO  Config:115 - Success!
2020-05-26 18:38:13 INFO  Config:116 - Assert response body...
2020-05-26 18:38:13 INFO  Config:120 - Success!
2020-05-26 18:38:13 INFO  Config:58 - 
2020-05-26 18:38:13 INFO  Config:59 - 
2020-05-26 18:38:13 INFO  Config:60 - Test Case ID :TS_092 - Description :Test Insert Payment API if wallet balance equals zero
2020-05-26 18:38:16 INFO  Config:79 - Status code => 403
2020-05-26 18:38:16 INFO  Config:80 - Content-type => application/json
2020-05-26 18:38:16 INFO  Config:81 - Response body => {"data":{},"message":"Insufficient balance please top up","status":"403"}
2020-05-26 18:38:16 INFO  Config:110 - Assert status code...
2020-05-26 18:38:16 INFO  Config:112 - Success!
2020-05-26 18:38:16 INFO  Config:113 - Assert Content-Type...
2020-05-26 18:38:16 INFO  Config:115 - Success!
2020-05-26 18:38:16 INFO  Config:116 - Assert response body...
2020-05-26 18:38:16 INFO  Config:120 - Success!
2020-05-26 18:38:16 INFO  Config:58 - 
2020-05-26 18:38:16 INFO  Config:59 - 
2020-05-26 18:38:16 INFO  Config:60 - Test Case ID :TS_093 - Description :Test Insert Payment API with invalid payment method (contain alphabet)
2020-05-26 18:38:19 INFO  Config:79 - Status code => 400
2020-05-26 18:38:19 INFO  Config:80 - Content-type => application/json
2020-05-26 18:38:19 INFO  Config:81 - Response body => {"timestamp":"2020-05-26T11:38:19.175+0000","status":400,"error":"Bad Request","message":"JSON parse error: Cannot deserialize value of type `long` from String \"abc\": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `long` from String \"abc\": not a valid Long value\n at [Source: (PushbackInputStream); line: 1, column: 35] (through reference chain: com.paystore.model.Payment[\"idPaymentMethod\"])","path":"/api/paystore/payment"}
2020-05-26 18:38:19 INFO  Config:97 - Assert status code...
2020-05-26 18:38:19 INFO  Config:99 - Success!
2020-05-26 18:38:19 INFO  Config:100 - Assert Content-Type...
2020-05-26 18:38:19 INFO  Config:102 - Success!
2020-05-26 18:38:19 INFO  Config:103 - Assert response body...
2020-05-26 18:38:19 INFO  Config:107 - Success!
2020-05-26 18:38:19 INFO  Config:58 - 
2020-05-26 18:38:19 INFO  Config:59 - 
2020-05-26 18:38:19 INFO  Config:60 - Test Case ID :TS_094 - Description :Test Insert Payment API with invalid payment method (contain symbol)
2020-05-26 18:38:22 INFO  Config:79 - Status code => 400
2020-05-26 18:38:22 INFO  Config:80 - Content-type => application/json
2020-05-26 18:38:22 INFO  Config:81 - Response body => {"timestamp":"2020-05-26T11:38:22.211+0000","status":400,"error":"Bad Request","message":"JSON parse error: Cannot deserialize value of type `long` from String \"@\": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `long` from String \"@\": not a valid Long value\n at [Source: (PushbackInputStream); line: 1, column: 35] (through reference chain: com.paystore.model.Payment[\"idPaymentMethod\"])","path":"/api/paystore/payment"}
2020-05-26 18:38:22 INFO  Config:97 - Assert status code...
2020-05-26 18:38:22 INFO  Config:99 - Success!
2020-05-26 18:38:22 INFO  Config:100 - Assert Content-Type...
2020-05-26 18:38:22 INFO  Config:102 - Success!
2020-05-26 18:38:22 INFO  Config:103 - Assert response body...
2020-05-26 18:38:22 INFO  Config:107 - Success!
2020-05-26 18:38:22 INFO  Config:58 - 
2020-05-26 18:38:22 INFO  Config:59 - 
2020-05-26 18:38:22 INFO  Config:60 - Test Case ID :TS_095 - Description :Test Insert Payment API with invalid payment method (empty)
2020-05-26 18:38:25 INFO  Config:79 - Status code => 404
2020-05-26 18:38:25 INFO  Config:80 - Content-type => application/json
2020-05-26 18:38:25 INFO  Config:81 - Response body => {"data":{},"message":"Payment method not found","status":"404"}
2020-05-26 18:38:25 INFO  Config:110 - Assert status code...
2020-05-26 18:38:25 INFO  Config:112 - Success!
2020-05-26 18:38:25 INFO  Config:113 - Assert Content-Type...
2020-05-26 18:38:25 INFO  Config:115 - Success!
2020-05-26 18:38:25 INFO  Config:116 - Assert response body...
2020-05-26 18:38:25 INFO  Config:120 - Success!
2020-05-26 18:38:25 INFO  Config:58 - 
2020-05-26 18:38:25 INFO  Config:59 - 
2020-05-26 18:38:25 INFO  Config:60 - Test Case ID :TS_096 - Description :Test Insert Payment API with invalid id bill (contain alphabet)
2020-05-26 18:38:28 INFO  Config:79 - Status code => 400
2020-05-26 18:38:28 INFO  Config:80 - Content-type => application/json
2020-05-26 18:38:28 INFO  Config:81 - Response body => {"timestamp":"2020-05-26T11:38:28.557+0000","status":400,"error":"Bad Request","message":"JSON parse error: Cannot deserialize value of type `long` from String \"abc\": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `long` from String \"abc\": not a valid Long value\n at [Source: (PushbackInputStream); line: 1, column: 48] (through reference chain: com.paystore.model.Payment[\"idBill\"])","path":"/api/paystore/payment"}
2020-05-26 18:38:28 INFO  Config:97 - Assert status code...
2020-05-26 18:38:28 INFO  Config:99 - Success!
2020-05-26 18:38:28 INFO  Config:100 - Assert Content-Type...
2020-05-26 18:38:28 INFO  Config:102 - Success!
2020-05-26 18:38:28 INFO  Config:103 - Assert response body...
2020-05-26 18:38:28 INFO  Config:107 - Success!
2020-05-26 18:38:28 INFO  Config:58 - 
2020-05-26 18:38:28 INFO  Config:59 - 
2020-05-26 18:38:28 INFO  Config:60 - Test Case ID :TS_097 - Description :Test Insert Payment API with invalid id bill (contain symbol)
2020-05-26 18:38:31 INFO  Config:79 - Status code => 400
2020-05-26 18:38:31 INFO  Config:80 - Content-type => application/json
2020-05-26 18:38:31 INFO  Config:81 - Response body => {"timestamp":"2020-05-26T11:38:31.732+0000","status":400,"error":"Bad Request","message":"JSON parse error: Cannot deserialize value of type `long` from String \"@\": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `long` from String \"@\": not a valid Long value\n at [Source: (PushbackInputStream); line: 1, column: 48] (through reference chain: com.paystore.model.Payment[\"idBill\"])","path":"/api/paystore/payment"}
2020-05-26 18:38:31 INFO  Config:97 - Assert status code...
2020-05-26 18:38:31 INFO  Config:99 - Success!
2020-05-26 18:38:31 INFO  Config:100 - Assert Content-Type...
2020-05-26 18:38:31 INFO  Config:102 - Success!
2020-05-26 18:38:31 INFO  Config:103 - Assert response body...
2020-05-26 18:38:31 INFO  Config:107 - Success!
2020-05-26 18:38:31 INFO  Config:58 - 
2020-05-26 18:38:31 INFO  Config:59 - 
2020-05-26 18:38:31 INFO  Config:60 - Test Case ID :TS_098 - Description :Test Insert Payment API with invalid id bill (empty)
2020-05-26 18:38:34 INFO  Config:79 - Status code => 404
2020-05-26 18:38:34 INFO  Config:80 - Content-type => application/json
2020-05-26 18:38:34 INFO  Config:81 - Response body => {"data":{},"message":"Bill not found","status":"404"}
2020-05-26 18:38:34 INFO  Config:110 - Assert status code...
2020-05-26 18:38:34 INFO  Config:112 - Success!
2020-05-26 18:38:34 INFO  Config:113 - Assert Content-Type...
2020-05-26 18:38:34 INFO  Config:115 - Success!
2020-05-26 18:38:34 INFO  Config:116 - Assert response body...
2020-05-26 18:38:34 INFO  Config:120 - Success!
2020-05-26 18:38:34 INFO  Config:58 - 
2020-05-26 18:38:34 INFO  Config:59 - 
2020-05-26 18:38:34 INFO  Config:60 - Test Case ID :TS_099 - Description :Test Insert Payment API with invalid id user(contain alphabet)
2020-05-26 18:38:36 INFO  Config:79 - Status code => 400
2020-05-26 18:38:36 INFO  Config:80 - Content-type => application/json
2020-05-26 18:38:36 INFO  Config:81 - Response body => {"timestamp":"2020-05-26T11:38:36.267+0000","status":400,"error":"Bad Request","message":"JSON parse error: Cannot deserialize value of type `long` from String \"abc\": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `long` from String \"abc\": not a valid Long value\n at [Source: (PushbackInputStream); line: 1, column: 11] (through reference chain: com.paystore.model.Payment[\"idUser\"])","path":"/api/paystore/payment"}
2020-05-26 18:38:36 INFO  Config:97 - Assert status code...
2020-05-26 18:38:36 INFO  Config:99 - Success!
2020-05-26 18:38:36 INFO  Config:100 - Assert Content-Type...
2020-05-26 18:38:36 INFO  Config:102 - Success!
2020-05-26 18:38:36 INFO  Config:103 - Assert response body...
2020-05-26 18:38:36 INFO  Config:107 - Success!
2020-05-26 18:38:36 INFO  Config:58 - 
2020-05-26 18:38:36 INFO  Config:59 - 
2020-05-26 18:38:36 INFO  Config:60 - Test Case ID :TS_100 - Description :Test Insert Payment API with invalid id user (contain symbol)
2020-05-26 18:38:37 INFO  Config:79 - Status code => 400
2020-05-26 18:38:37 INFO  Config:80 - Content-type => application/json
2020-05-26 18:38:37 INFO  Config:81 - Response body => {"timestamp":"2020-05-26T11:38:37.682+0000","status":400,"error":"Bad Request","message":"JSON parse error: Cannot deserialize value of type `long` from String \"@\": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `long` from String \"@\": not a valid Long value\n at [Source: (PushbackInputStream); line: 1, column: 11] (through reference chain: com.paystore.model.Payment[\"idUser\"])","path":"/api/paystore/payment"}
2020-05-26 18:38:37 INFO  Config:97 - Assert status code...
2020-05-26 18:38:37 INFO  Config:99 - Success!
2020-05-26 18:38:37 INFO  Config:100 - Assert Content-Type...
2020-05-26 18:38:37 INFO  Config:102 - Success!
2020-05-26 18:38:37 INFO  Config:103 - Assert response body...
2020-05-26 18:38:37 INFO  Config:107 - Success!
2020-05-26 18:38:37 INFO  Config:58 - 
2020-05-26 18:38:37 INFO  Config:59 - 
2020-05-26 18:38:37 INFO  Config:60 - Test Case ID :TS_101 - Description :Test Insert Payment API with invalid id user (empty)
2020-05-26 18:38:39 INFO  Config:79 - Status code => 404
2020-05-26 18:38:39 INFO  Config:80 - Content-type => application/json
2020-05-26 18:38:39 INFO  Config:81 - Response body => {"data":{},"message":"User not found","status":"404"}
2020-05-26 18:38:39 INFO  Config:110 - Assert status code...
2020-05-26 18:38:39 INFO  Config:112 - Success!
2020-05-26 18:38:39 INFO  Config:113 - Assert Content-Type...
2020-05-26 18:38:39 INFO  Config:115 - Success!
2020-05-26 18:38:39 INFO  Config:116 - Assert response body...
2020-05-26 18:38:39 INFO  Config:120 - Success!
2020-05-26 18:38:39 INFO  Config:25 - 
2020-05-26 18:38:39 INFO  Config:26 - =====TS_007 Verify Payment=====
2020-05-26 18:38:54 INFO  Config:69 - 
2020-05-26 18:38:54 INFO  Config:70 - 
2020-05-26 18:38:54 INFO  Config:71 - Test Case ID :TS_102 - Description :Test Verify Payment API with positive test path (pay with wallet balance)
2020-05-26 18:38:54 INFO  Config:82 - idBill=481
2020-05-26 18:38:55 INFO  Config:89 - Status code => 200
2020-05-26 18:38:55 INFO  Config:90 - Content-type => application/json
2020-05-26 18:38:55 INFO  Config:91 - Response body => {"data":{},"message":"Payment success","status":"200"}
2020-05-26 18:38:55 INFO  Config:94 - Assert status code...
2020-05-26 18:38:55 INFO  Config:96 - Success!
2020-05-26 18:38:55 INFO  Config:97 - Assert Content-Type...
2020-05-26 18:38:55 INFO  Config:99 - Success!
2020-05-26 18:38:55 INFO  Config:100 - Assert response body...
2020-05-26 18:38:55 INFO  Config:104 - success!
2020-05-26 18:38:56 INFO  Config:69 - 
2020-05-26 18:38:56 INFO  Config:70 - 
2020-05-26 18:38:56 INFO  Config:71 - Test Case ID :TS_103 - Description :Test Verify Payment API with positive test path (pay with wallet bank transfer)
2020-05-26 18:38:56 INFO  Config:82 - idBill=482
2020-05-26 18:38:58 INFO  Config:89 - Status code => 200
2020-05-26 18:38:58 INFO  Config:90 - Content-type => application/json
2020-05-26 18:38:58 INFO  Config:91 - Response body => {"data":{},"message":"Payment success","status":"200"}
2020-05-26 18:38:58 INFO  Config:94 - Assert status code...
2020-05-26 18:38:58 INFO  Config:96 - Success!
2020-05-26 18:38:58 INFO  Config:97 - Assert Content-Type...
2020-05-26 18:38:58 INFO  Config:99 - Success!
2020-05-26 18:38:58 INFO  Config:100 - Assert response body...
2020-05-26 18:38:58 INFO  Config:104 - success!
2020-05-26 18:38:58 INFO  Config:69 - 
2020-05-26 18:38:58 INFO  Config:70 - 
2020-05-26 18:38:58 INFO  Config:71 - Test Case ID :TS_104 - Description :Test Verify Payment API if user not insert payment first (payment method : wallet balance)
2020-05-26 18:38:58 INFO  Config:82 - idBill=484
2020-05-26 18:39:00 INFO  Config:89 - Status code => 403
2020-05-26 18:39:00 INFO  Config:90 - Content-type => application/json
2020-05-26 18:39:00 INFO  Config:91 - Response body => {"data":{},"message":"You must do the payment transaction first","status":"403"}
2020-05-26 18:39:00 INFO  Config:120 - Assert status code...
2020-05-26 18:39:00 INFO  Config:122 - Success!
2020-05-26 18:39:00 INFO  Config:123 - Assert Content-Type...
2020-05-26 18:39:00 INFO  Config:125 - Success!
2020-05-26 18:39:00 INFO  Config:126 - Assert response body...
2020-05-26 18:39:00 INFO  Config:69 - 
2020-05-26 18:39:00 INFO  Config:70 - 
2020-05-26 18:39:00 INFO  Config:71 - Test Case ID :TS_105 - Description :Test Verify Payment API if user not insert payment first (payment method : bank transfer)
2020-05-26 18:39:00 INFO  Config:82 - idBill=485
2020-05-26 18:39:01 INFO  Config:89 - Status code => 403
2020-05-26 18:39:01 INFO  Config:90 - Content-type => application/json
2020-05-26 18:39:01 INFO  Config:91 - Response body => {"data":{},"message":"You must do the payment transaction first","status":"403"}
2020-05-26 18:39:01 INFO  Config:120 - Assert status code...
2020-05-26 18:39:01 INFO  Config:122 - Success!
2020-05-26 18:39:01 INFO  Config:123 - Assert Content-Type...
2020-05-26 18:39:01 INFO  Config:125 - Success!
2020-05-26 18:39:01 INFO  Config:126 - Assert response body...
2020-05-26 18:39:01 INFO  Config:69 - 
2020-05-26 18:39:01 INFO  Config:70 - 
2020-05-26 18:39:01 INFO  Config:71 - Test Case ID :TS_106 - Description :Test Verify Payment API with unrecognized payment method
2020-05-26 18:39:01 INFO  Config:82 - idBill=483
2020-05-26 18:39:02 INFO  Config:89 - Status code => 404
2020-05-26 18:39:02 INFO  Config:90 - Content-type => application/json
2020-05-26 18:39:02 INFO  Config:91 - Response body => {"data":{},"message":"Payment method not found","status":"404"}
2020-05-26 18:39:02 INFO  Config:120 - Assert status code...
2020-05-26 18:39:02 INFO  Config:122 - Success!
2020-05-26 18:39:02 INFO  Config:123 - Assert Content-Type...
2020-05-26 18:39:02 INFO  Config:125 - Success!
2020-05-26 18:39:02 INFO  Config:126 - Assert response body...
2020-05-26 18:39:02 INFO  Config:130 - Success!
2020-05-26 18:39:02 INFO  Config:69 - 
2020-05-26 18:39:02 INFO  Config:70 - 
2020-05-26 18:39:02 INFO  Config:71 - Test Case ID :TS_107 - Description :Test Verify Payment API with unregistered bill
2020-05-26 18:39:04 INFO  Config:89 - Status code => 404
2020-05-26 18:39:04 INFO  Config:90 - Content-type => application/json
2020-05-26 18:39:04 INFO  Config:91 - Response body => {"data":{},"message":"Bill not found","status":"404"}
2020-05-26 18:39:04 INFO  Config:120 - Assert status code...
2020-05-26 18:39:04 INFO  Config:122 - Success!
2020-05-26 18:39:04 INFO  Config:123 - Assert Content-Type...
2020-05-26 18:39:04 INFO  Config:125 - Success!
2020-05-26 18:39:04 INFO  Config:126 - Assert response body...
2020-05-26 18:39:04 INFO  Config:130 - Success!
2020-05-26 18:39:04 INFO  Config:69 - 
2020-05-26 18:39:04 INFO  Config:70 - 
2020-05-26 18:39:04 INFO  Config:71 - Test Case ID :TS_108 - Description :Test Verify Payment API with unregistered user
2020-05-26 18:39:04 INFO  Config:82 - idBill=483
2020-05-26 18:39:05 INFO  Config:89 - Status code => 404
2020-05-26 18:39:05 INFO  Config:90 - Content-type => application/json
2020-05-26 18:39:05 INFO  Config:91 - Response body => {"data":{},"message":"User not found","status":"404"}
2020-05-26 18:39:05 INFO  Config:120 - Assert status code...
2020-05-26 18:39:05 INFO  Config:122 - Success!
2020-05-26 18:39:05 INFO  Config:123 - Assert Content-Type...
2020-05-26 18:39:05 INFO  Config:125 - Success!
2020-05-26 18:39:05 INFO  Config:126 - Assert response body...
2020-05-26 18:39:05 INFO  Config:130 - Success!
2020-05-26 18:39:05 INFO  Config:69 - 
2020-05-26 18:39:05 INFO  Config:70 - 
2020-05-26 18:39:05 INFO  Config:71 - Test Case ID :TS_109 - Description :Test Verify Payment API with invalid payment method (contain alphabet)
2020-05-26 18:39:05 INFO  Config:82 - idBill=483
2020-05-26 18:39:07 INFO  Config:89 - Status code => 400
2020-05-26 18:39:07 INFO  Config:90 - Content-type => application/json
2020-05-26 18:39:07 INFO  Config:91 - Response body => {"timestamp":"2020-05-26T11:39:07.212+0000","status":400,"error":"Bad Request","message":"JSON parse error: Cannot deserialize value of type `long` from String \"abc\": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `long` from String \"abc\": not a valid Long value\n at [Source: (PushbackInputStream); line: 1, column: 35] (through reference chain: com.paystore.model.Payment[\"idPaymentMethod\"])","path":"/api/paystore/payment/verify"}
2020-05-26 18:39:07 INFO  Config:107 - Assert status code...
2020-05-26 18:39:07 INFO  Config:109 - Success!
2020-05-26 18:39:07 INFO  Config:110 - Assert Content-Type...
2020-05-26 18:39:07 INFO  Config:112 - Success!
2020-05-26 18:39:07 INFO  Config:113 - Assert response body...
2020-05-26 18:39:07 INFO  Config:117 - Success!
2020-05-26 18:39:07 INFO  Config:69 - 
2020-05-26 18:39:07 INFO  Config:70 - 
2020-05-26 18:39:07 INFO  Config:71 - Test Case ID :TS_110 - Description :Test Verify Payment API with invalid payment method (contain symbol)
2020-05-26 18:39:07 INFO  Config:82 - idBill=483
2020-05-26 18:39:08 INFO  Config:89 - Status code => 400
2020-05-26 18:39:08 INFO  Config:90 - Content-type => application/json
2020-05-26 18:39:08 INFO  Config:91 - Response body => {"timestamp":"2020-05-26T11:39:08.564+0000","status":400,"error":"Bad Request","message":"JSON parse error: Cannot deserialize value of type `long` from String \"@\": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `long` from String \"@\": not a valid Long value\n at [Source: (PushbackInputStream); line: 1, column: 35] (through reference chain: com.paystore.model.Payment[\"idPaymentMethod\"])","path":"/api/paystore/payment/verify"}
2020-05-26 18:39:08 INFO  Config:107 - Assert status code...
2020-05-26 18:39:08 INFO  Config:109 - Success!
2020-05-26 18:39:08 INFO  Config:110 - Assert Content-Type...
2020-05-26 18:39:08 INFO  Config:112 - Success!
2020-05-26 18:39:08 INFO  Config:113 - Assert response body...
2020-05-26 18:39:08 INFO  Config:117 - Success!
2020-05-26 18:39:08 INFO  Config:69 - 
2020-05-26 18:39:08 INFO  Config:70 - 
2020-05-26 18:39:08 INFO  Config:71 - Test Case ID :TS_111 - Description :Test Verify Payment API with invalid payment method (empty)
2020-05-26 18:39:08 INFO  Config:82 - idBill=483
2020-05-26 18:39:10 INFO  Config:89 - Status code => 404
2020-05-26 18:39:10 INFO  Config:90 - Content-type => application/json
2020-05-26 18:39:10 INFO  Config:91 - Response body => {"data":{},"message":"Payment method not found","status":"404"}
2020-05-26 18:39:10 INFO  Config:120 - Assert status code...
2020-05-26 18:39:10 INFO  Config:122 - Success!
2020-05-26 18:39:10 INFO  Config:123 - Assert Content-Type...
2020-05-26 18:39:10 INFO  Config:125 - Success!
2020-05-26 18:39:10 INFO  Config:126 - Assert response body...
2020-05-26 18:39:10 INFO  Config:130 - Success!
2020-05-26 18:39:10 INFO  Config:69 - 
2020-05-26 18:39:10 INFO  Config:70 - 
2020-05-26 18:39:10 INFO  Config:71 - Test Case ID :TS_112 - Description :Test Verify Payment API with invalid id bill (contain alphabet)
2020-05-26 18:39:12 INFO  Config:89 - Status code => 400
2020-05-26 18:39:12 INFO  Config:90 - Content-type => application/json
2020-05-26 18:39:12 INFO  Config:91 - Response body => {"timestamp":"2020-05-26T11:39:12.019+0000","status":400,"error":"Bad Request","message":"JSON parse error: Cannot deserialize value of type `long` from String \"abc\": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `long` from String \"abc\": not a valid Long value\n at [Source: (PushbackInputStream); line: 1, column: 48] (through reference chain: com.paystore.model.Payment[\"idBill\"])","path":"/api/paystore/payment/verify"}
2020-05-26 18:39:12 INFO  Config:107 - Assert status code...
2020-05-26 18:39:12 INFO  Config:109 - Success!
2020-05-26 18:39:12 INFO  Config:110 - Assert Content-Type...
2020-05-26 18:39:12 INFO  Config:112 - Success!
2020-05-26 18:39:12 INFO  Config:113 - Assert response body...
2020-05-26 18:39:12 INFO  Config:117 - Success!
2020-05-26 18:39:12 INFO  Config:69 - 
2020-05-26 18:39:12 INFO  Config:70 - 
2020-05-26 18:39:12 INFO  Config:71 - Test Case ID :TS_113 - Description :Test Verify Payment API with invalid id bill (contain symbol)
2020-05-26 18:39:15 INFO  Config:89 - Status code => 400
2020-05-26 18:39:15 INFO  Config:90 - Content-type => application/json
2020-05-26 18:39:15 INFO  Config:91 - Response body => {"timestamp":"2020-05-26T11:39:14.929+0000","status":400,"error":"Bad Request","message":"JSON parse error: Cannot deserialize value of type `long` from String \"@\": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `long` from String \"@\": not a valid Long value\n at [Source: (PushbackInputStream); line: 1, column: 48] (through reference chain: com.paystore.model.Payment[\"idBill\"])","path":"/api/paystore/payment/verify"}
2020-05-26 18:39:15 INFO  Config:107 - Assert status code...
2020-05-26 18:39:15 INFO  Config:109 - Success!
2020-05-26 18:39:15 INFO  Config:110 - Assert Content-Type...
2020-05-26 18:39:15 INFO  Config:112 - Success!
2020-05-26 18:39:15 INFO  Config:113 - Assert response body...
2020-05-26 18:39:15 INFO  Config:117 - Success!
2020-05-26 18:39:15 INFO  Config:69 - 
2020-05-26 18:39:15 INFO  Config:70 - 
2020-05-26 18:39:15 INFO  Config:71 - Test Case ID :TS_114 - Description :Test Verify Payment API with invalid id bill (empty)
2020-05-26 18:39:16 INFO  Config:89 - Status code => 404
2020-05-26 18:39:16 INFO  Config:90 - Content-type => application/json
2020-05-26 18:39:16 INFO  Config:91 - Response body => {"data":{},"message":"Bill not found","status":"404"}
2020-05-26 18:39:16 INFO  Config:120 - Assert status code...
2020-05-26 18:39:16 INFO  Config:122 - Success!
2020-05-26 18:39:16 INFO  Config:123 - Assert Content-Type...
2020-05-26 18:39:16 INFO  Config:125 - Success!
2020-05-26 18:39:16 INFO  Config:126 - Assert response body...
2020-05-26 18:39:16 INFO  Config:130 - Success!
2020-05-26 18:39:16 INFO  Config:69 - 
2020-05-26 18:39:16 INFO  Config:70 - 
2020-05-26 18:39:16 INFO  Config:71 - Test Case ID :TS_115 - Description :Test Verify Payment API with invalid id user (contain alphabet)
2020-05-26 18:39:16 INFO  Config:82 - idBill=483
2020-05-26 18:39:18 INFO  Config:89 - Status code => 400
2020-05-26 18:39:18 INFO  Config:90 - Content-type => application/json
2020-05-26 18:39:18 INFO  Config:91 - Response body => {"timestamp":"2020-05-26T11:39:18.765+0000","status":400,"error":"Bad Request","message":"JSON parse error: Cannot deserialize value of type `long` from String \"abc\": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `long` from String \"abc\": not a valid Long value\n at [Source: (PushbackInputStream); line: 1, column: 11] (through reference chain: com.paystore.model.Payment[\"idUser\"])","path":"/api/paystore/payment/verify"}
2020-05-26 18:39:18 INFO  Config:107 - Assert status code...
2020-05-26 18:39:18 INFO  Config:109 - Success!
2020-05-26 18:39:18 INFO  Config:110 - Assert Content-Type...
2020-05-26 18:39:18 INFO  Config:112 - Success!
2020-05-26 18:39:18 INFO  Config:113 - Assert response body...
2020-05-26 18:39:18 INFO  Config:117 - Success!
2020-05-26 18:39:18 INFO  Config:69 - 
2020-05-26 18:39:18 INFO  Config:70 - 
2020-05-26 18:39:18 INFO  Config:71 - Test Case ID :TS_116 - Description :Test Verify Payment API with invalid id user (contain symbol)
2020-05-26 18:39:18 INFO  Config:82 - idBill=483
2020-05-26 18:39:20 INFO  Config:89 - Status code => 400
2020-05-26 18:39:20 INFO  Config:90 - Content-type => application/json
2020-05-26 18:39:20 INFO  Config:91 - Response body => {"timestamp":"2020-05-26T11:39:20.659+0000","status":400,"error":"Bad Request","message":"JSON parse error: Cannot deserialize value of type `long` from String \"@\": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `long` from String \"@\": not a valid Long value\n at [Source: (PushbackInputStream); line: 1, column: 11] (through reference chain: com.paystore.model.Payment[\"idUser\"])","path":"/api/paystore/payment/verify"}
2020-05-26 18:39:20 INFO  Config:107 - Assert status code...
2020-05-26 18:39:20 INFO  Config:109 - Success!
2020-05-26 18:39:20 INFO  Config:110 - Assert Content-Type...
2020-05-26 18:39:20 INFO  Config:112 - Success!
2020-05-26 18:39:20 INFO  Config:113 - Assert response body...
2020-05-26 18:39:20 INFO  Config:117 - Success!
2020-05-26 18:39:20 INFO  Config:69 - 
2020-05-26 18:39:20 INFO  Config:70 - 
2020-05-26 18:39:20 INFO  Config:71 - Test Case ID :TS_117 - Description :Test Verify Payment API with invalid id user (empty)
2020-05-26 18:39:20 INFO  Config:82 - idBill=483
2020-05-26 18:39:22 INFO  Config:89 - Status code => 404
2020-05-26 18:39:22 INFO  Config:90 - Content-type => application/json
2020-05-26 18:39:22 INFO  Config:91 - Response body => {"data":{},"message":"User not found","status":"404"}
2020-05-26 18:39:22 INFO  Config:120 - Assert status code...
2020-05-26 18:39:22 INFO  Config:122 - Success!
2020-05-26 18:39:22 INFO  Config:123 - Assert Content-Type...
2020-05-26 18:39:22 INFO  Config:125 - Success!
2020-05-26 18:39:22 INFO  Config:126 - Assert response body...
2020-05-26 18:39:22 INFO  Config:130 - Success!
2020-05-26 18:39:22 INFO  Config:21 - 
2020-05-26 18:39:22 INFO  Config:22 - =====TS_008 Get User Payment History=====
2020-05-26 18:39:22 INFO  Config:37 - 
2020-05-26 18:39:22 INFO  Config:38 - 
2020-05-26 18:39:22 INFO  Config:39 - Test Case ID :TC_118 - Description :Test Get User Payment History API if user exist
2020-05-26 18:39:24 INFO  Config:52 - Status code => 200
2020-05-26 18:39:24 INFO  Config:53 - Content-type => application/json
2020-05-26 18:39:24 INFO  Config:54 - Response body => {"data":[{"idPayment":350,"idUser":1,"name":"Mark Rufallo","idBill":37,"telephoneNumber":"021123459","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-21 14:19:05"},{"idPayment":349,"idUser":1,"name":"Ndobleh","idBill":247,"telephoneNumber":"022729157534","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-19 07:30:50"},{"idPayment":327,"idUser":1,"name":"Ndobleh","idBill":247,"telephoneNumber":"022729157534","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-19 05:15:51"},{"idPayment":321,"idUser":1,"name":"Cilacap Santai","idBill":38,"telephoneNumber":"036112345","status":"unpaid","amount":10000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-19 04:23:58"},{"idPayment":320,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":2,"method":"bank","timestamp":"2020-05-19 04:23:12"},{"idPayment":319,"idUser":1,"name":"Ndobleh","idBill":247,"telephoneNumber":"022729157534","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-19 04:22:33"},{"idPayment":318,"idUser":1,"name":"Cilacap Santai","idBill":38,"telephoneNumber":"036112345","status":"unpaid","amount":10000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-19 04:11:50"},{"idPayment":317,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":2,"method":"bank","timestamp":"2020-05-19 04:11:05"},{"idPayment":316,"idUser":1,"name":"Ndobleh","idBill":247,"telephoneNumber":"022729157534","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-19 04:10:17"},{"idPayment":315,"idUser":1,"name":"Cilacap Santai","idBill":38,"telephoneNumber":"036112345","status":"unpaid","amount":10000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-19 03:57:20"},{"idPayment":314,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":2,"method":"bank","timestamp":"2020-05-19 03:56:40"},{"idPayment":312,"idUser":1,"name":"Natasha Romanoff","idBill":65,"telephoneNumber":"02272915753","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-18 18:23:40"},{"idPayment":301,"idUser":1,"name":"Cilacap Santai","idBill":38,"telephoneNumber":"036112345","status":"unpaid","amount":10000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-18 17:15:35"},{"idPayment":300,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":2,"method":"bank","timestamp":"2020-05-18 17:14:53"},{"idPayment":299,"idUser":1,"name":"Ndobleh","idBill":247,"telephoneNumber":"022729157534","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-18 17:14:15"},{"idPayment":298,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":2,"method":"bank","timestamp":"2020-05-18 17:10:03"},{"idPayment":297,"idUser":1,"name":"Ndobleh","idBill":247,"telephoneNumber":"022729157534","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-18 17:09:29"},{"idPayment":296,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-18 16:55:09"},{"idPayment":295,"idUser":1,"name":"Cilacap Santai","idBill":38,"telephoneNumber":"036112345","status":"unpaid","amount":10000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-18 15:12:31"},{"idPayment":294,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":2,"method":"bank","timestamp":"2020-05-18 15:11:52"},{"idPayment":293,"idUser":1,"name":"Ndobleh","idBill":247,"telephoneNumber":"022729157534","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-18 15:10:57"},{"idPayment":292,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":2,"method":"bank","timestamp":"2020-05-18 15:04:08"},{"idPayment":288,"idUser":1,"name":"Ndobleh","idBill":247,"telephoneNumber":"022729157534","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-18 15:03:30"},{"idPayment":287,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":2,"method":"bank","timestamp":"2020-05-18 14:49:03"},{"idPayment":286,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":2,"method":"bank","timestamp":"2020-05-18 14:46:52"},{"idPayment":282,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":2,"method":"bank","timestamp":"2020-05-18 14:41:37"},{"idPayment":281,"idUser":1,"name":"Ndobleh","idBill":247,"telephoneNumber":"022729157534","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-18 14:41:00"},{"idPayment":280,"idUser":1,"name":"Tony Stark","idBill":2,"telephoneNumber":"0227254321","status":"unpaii","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-18 14:37:39"},{"idPayment":273,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":2,"method":"bank","timestamp":"2020-05-18 14:18:26"},{"idPayment":272,"idUser":1,"name":"Ndobleh","idBill":247,"telephoneNumber":"022729157534","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-18 14:17:53"},{"idPayment":271,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-18 14:14:44"},{"idPayment":270,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-18 14:06:52"},{"idPayment":269,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":2,"method":"bank","timestamp":"2020-05-18 13:31:53"},{"idPayment":268,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-18 12:50:52"},{"idPayment":267,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-18 12:32:26"},{"idPayment":265,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-18 12:14:27"},{"idPayment":262,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":2,"method":"bank","timestamp":"2020-05-18 11:42:26"},{"idPayment":259,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-18 11:17:30"},{"idPayment":257,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-18 10:42:27"},{"idPayment":243,"idUser":1,"name":"Cilacap Santai","idBill":38,"telephoneNumber":"036112345","status":"unpaid","amount":10000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-18 08:03:12"},{"idPayment":242,"idUser":1,"name":"Yani Suryani","idBill":36,"telephoneNumber":"03611234","status":"unpaid","amount":75000.0,"idPaymentMethod":2,"method":"bank","timestamp":"2020-05-18 08:02:42"},{"idPayment":241,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-18 08:01:53"},{"idPayment":240,"idUser":1,"name":"Yani Suryani","idBill":36,"telephoneNumber":"03611234","status":"unpaid","amount":75000.0,"idPaymentMethod":2,"method":"bank","timestamp":"2020-05-18 07:54:44"},{"idPayment":239,"idUser":1,"name":"Cilacap Santai","idBill":38,"telephoneNumber":"036112345","status":"unpaid","amount":10000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-18 07:44:11"},{"idPayment":238,"idUser":1,"name":"Yani Suryani","idBill":36,"telephoneNumber":"03611234","status":"unpaid","amount":75000.0,"idPaymentMethod":2,"method":"bank","timestamp":"2020-05-18 07:43:26"},{"idPayment":237,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-18 07:42:36"},{"idPayment":229,"idUser":1,"name":"Natasha Romanoff","idBill":27,"telephoneNumber":"02272915753","status":"pending","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-18 07:11:24"},{"idPayment":225,"idUser":1,"name":"Mark Rufallo","idBill":37,"telephoneNumber":"021123459","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-18 05:46:10"},{"idPayment":214,"idUser":1,"name":"Cilacap Santai","idBill":38,"telephoneNumber":"036112345","status":"unpaid","amount":10000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-17 19:53:21"},{"idPayment":213,"idUser":1,"name":"Yani Suryani","idBill":36,"telephoneNumber":"03611234","status":"unpaid","amount":75000.0,"idPaymentMethod":2,"method":"bank","timestamp":"2020-05-17 19:52:54"},{"idPayment":212,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-17 19:52:10"},{"idPayment":211,"idUser":1,"name":"Natasha Romanoff","idBill":26,"telephoneNumber":"02272915753","status":"pending","amount":75000.0,"idPaymentMethod":2,"method":"bank","timestamp":"2020-05-17 19:51:17"},{"idPayment":210,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-17 19:00:57"},{"idPayment":209,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-17 18:58:59"},{"idPayment":208,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-17 18:56:11"},{"idPayment":205,"idUser":1,"name":"Cilacap Santai","idBill":38,"telephoneNumber":"036112345","status":"unpaid","amount":10000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-17 18:42:22"},{"idPayment":203,"idUser":1,"name":"Cilacap Santai","idBill":38,"telephoneNumber":"036112345","status":"unpaid","amount":10000.0,"idPaymentMethod":2,"method":"bank","timestamp":"2020-05-17 18:22:53"},{"idPayment":202,"idUser":1,"name":"Yani Suryani","idBill":36,"telephoneNumber":"03611234","status":"unpaid","amount":75000.0,"idPaymentMethod":2,"method":"bank","timestamp":"2020-05-17 18:22:17"},{"idPayment":201,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-17 18:21:37"},{"idPayment":200,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-17 18:19:00"},{"idPayment":195,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-17 18:01:41"},{"idPayment":194,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-17 17:58:29"},{"idPayment":193,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-17 17:56:47"},{"idPayment":192,"idUser":1,"name":"Jarwo Kuat","idBill":35,"telephoneNumber":"0361123456789","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-17 17:53:54"},{"idPayment":188,"idUser":1,"name":"Cilacap Santai","idBill":38,"telephoneNumber":"036112345","status":"unpaid","amount":10000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-17 17:16:16"},{"idPayment":187,"idUser":1,"name":"Yani Suryani","idBill":36,"telephoneNumber":"03611234","status":"unpaid","amount":75000.0,"idPaymentMethod":2,"method":"bank","timestamp":"2020-05-17 17:15:42"},{"idPayment":185,"idUser":1,"name":"Randu Dongkal","idBill":28,"telephoneNumber":"0361727272","status":"paid","amount":75000.0,"idPaymentMethod":2,"method":"bank","timestamp":"2020-05-17 16:42:21"},{"idPayment":183,"idUser":1,"name":"Randu Dongkal","idBill":28,"telephoneNumber":"0361727272","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-17 16:24:02"},{"idPayment":160,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-17 13:58:22"},{"idPayment":159,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-17 13:58:18"},{"idPayment":158,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-17 13:56:53"},{"idPayment":151,"idUser":1,"name":"Randu Dongkal","idBill":28,"telephoneNumber":"0361727272","status":"paid","amount":75000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-17 12:00:59"},{"idPayment":150,"idUser":1,"name":"Natasha Romanoff","idBill":13,"telephoneNumber":"02272915753","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-17 11:56:56"},{"idPayment":149,"idUser":1,"name":"Natasha Romanoff","idBill":13,"telephoneNumber":"02272915753","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-17 11:56:52"},{"idPayment":148,"idUser":1,"name":"Natasha Romanoff","idBill":13,"telephoneNumber":"02272915753","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-17 11:56:51"},{"idPayment":147,"idUser":1,"name":"Natasha Romanoff","idBill":13,"telephoneNumber":"02272915753","status":"paid","amount":50000.0,"idPaymentMethod":2,"method":"bank","timestamp":"2020-05-17 10:25:18"},{"idPayment":133,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-17 06:46:45"},{"idPayment":123,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 22:21:14"},{"idPayment":106,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 20:53:25"},{"idPayment":100,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 20:35:49"},{"idPayment":82,"idUser":1,"name":"Tony Stark","idBill":2,"telephoneNumber":"0227254321","status":"unpaii","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 17:33:55"},{"idPayment":81,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 17:21:16"},{"idPayment":80,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 17:17:20"},{"idPayment":79,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 17:11:48"},{"idPayment":78,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 17:05:44"},{"idPayment":77,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 16:49:46"},{"idPayment":76,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 16:48:00"},{"idPayment":75,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 16:45:45"},{"idPayment":74,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 16:43:11"},{"idPayment":73,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 16:34:52"},{"idPayment":72,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 16:19:01"},{"idPayment":71,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 16:16:18"},{"idPayment":70,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 16:10:17"},{"idPayment":67,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 14:45:27"},{"idPayment":66,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 14:43:15"},{"idPayment":65,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 14:41:19"},{"idPayment":64,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 14:37:03"},{"idPayment":63,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 14:34:20"},{"idPayment":62,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 14:09:37"},{"idPayment":61,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 14:06:41"},{"idPayment":59,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 13:21:02"},{"idPayment":54,"idUser":1,"name":"Tony Stark","idBill":2,"telephoneNumber":"0227254321","status":"unpaii","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 13:08:59"},{"idPayment":53,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 13:08:56"},{"idPayment":39,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-16 08:40:03"},{"idPayment":28,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-15 20:48:32"},{"idPayment":27,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-15 20:45:58"},{"idPayment":26,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-15 20:43:03"},{"idPayment":25,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-15 20:41:05"},{"idPayment":24,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-15 20:35:55"},{"idPayment":23,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-15 20:19:44"},{"idPayment":22,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-15 20:19:03"},{"idPayment":21,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-15 20:17:06"},{"idPayment":20,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-15 20:12:08"},{"idPayment":19,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-15 20:09:55"},{"idPayment":18,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-15 20:08:41"},{"idPayment":17,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-15 20:08:11"},{"idPayment":16,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-15 20:03:29"},{"idPayment":15,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-15 20:00:14"},{"idPayment":14,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-15 19:58:44"},{"idPayment":13,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-15 19:14:03"},{"idPayment":12,"idUser":1,"name":"Tony Stark","idBill":2,"telephoneNumber":"0227254321","status":"unpaii","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-15 18:56:40"},{"idPayment":10,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-15 18:51:06"},{"idPayment":9,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-15 18:50:39"},{"idPayment":8,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-15 18:49:48"},{"idPayment":7,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-15 18:49:25"},{"idPayment":6,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-15 18:42:34"},{"idPayment":5,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-15 18:42:31"},{"idPayment":2,"idUser":1,"name":"Tony Stark","idBill":2,"telephoneNumber":"0227254321","status":"unpaii","amount":50000.0,"idPaymentMethod":2,"method":"bank","timestamp":"2020-05-14 14:40:33"},{"idPayment":1,"idUser":1,"name":"Aldie Adrian","idBill":1,"telephoneNumber":"0227212345","status":"paid","amount":50000.0,"idPaymentMethod":1,"method":"paystore","timestamp":"2020-05-14 09:28:35"}],"message":"Payment history has successfully sent","status":"200"}
2020-05-26 18:39:24 INFO  Config:57 - Assert status code...
2020-05-26 18:39:24 INFO  Config:59 - Success!
2020-05-26 18:39:24 INFO  Config:60 - Assert Content-Type...
2020-05-26 18:39:24 INFO  Config:62 - Success!
2020-05-26 18:39:24 INFO  Config:63 - Assert response body...
2020-05-26 18:39:24 INFO  Config:78 - success!
2020-05-26 18:39:24 INFO  Config:37 - 
2020-05-26 18:39:24 INFO  Config:38 - 
2020-05-26 18:39:24 INFO  Config:39 - Test Case ID :TC_119 - Description :Test Get User Payment History if user not exist
2020-05-26 18:39:26 INFO  Config:52 - Status code => 404
2020-05-26 18:39:26 INFO  Config:53 - Content-type => application/json
2020-05-26 18:39:26 INFO  Config:54 - Response body => {"data":{},"message":"Payment not found","status":"404"}
2020-05-26 18:39:26 INFO  Config:94 - Assert status code...
2020-05-26 18:39:26 INFO  Config:96 - Success!
2020-05-26 18:39:26 INFO  Config:97 - Assert Content-Type...
2020-05-26 18:39:26 INFO  Config:99 - Success!
2020-05-26 18:39:26 INFO  Config:100 - Assert response body...
2020-05-26 18:39:26 INFO  Config:104 - Success!
2020-05-26 18:39:26 INFO  Config:37 - 
2020-05-26 18:39:26 INFO  Config:38 - 
2020-05-26 18:39:26 INFO  Config:39 - Test Case ID :TC_120 - Description :Test Get User Payment History API with invalid user id (contain alphabet)
2020-05-26 18:39:27 INFO  Config:52 - Status code => 400
2020-05-26 18:39:27 INFO  Config:53 - Content-type => application/json
2020-05-26 18:39:27 INFO  Config:54 - Response body => {"timestamp":"2020-05-26T11:39:27.772+0000","status":400,"error":"Bad Request","message":"JSON parse error: Cannot deserialize value of type `long` from String \"a\": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `long` from String \"a\": not a valid Long value\n at [Source: (PushbackInputStream); line: 1, column: 11] (through reference chain: com.paystore.model.PaymentDetail[\"idUser\"])","path":"/api/paystore/payment/history"}
2020-05-26 18:39:27 INFO  Config:81 - Assert status code...
2020-05-26 18:39:27 INFO  Config:83 - Success!
2020-05-26 18:39:27 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:39:27 INFO  Config:86 - Success!
2020-05-26 18:39:27 INFO  Config:87 - Assert response body...
2020-05-26 18:39:27 INFO  Config:91 - Success!
2020-05-26 18:39:27 INFO  Config:37 - 
2020-05-26 18:39:27 INFO  Config:38 - 
2020-05-26 18:39:27 INFO  Config:39 - Test Case ID :TC_121 - Description :Test Get User Payment History API with invalid user id (contain symbol)
2020-05-26 18:39:29 INFO  Config:52 - Status code => 400
2020-05-26 18:39:29 INFO  Config:53 - Content-type => application/json
2020-05-26 18:39:29 INFO  Config:54 - Response body => {"timestamp":"2020-05-26T11:39:29.206+0000","status":400,"error":"Bad Request","message":"JSON parse error: Cannot deserialize value of type `long` from String \"@\": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `long` from String \"@\": not a valid Long value\n at [Source: (PushbackInputStream); line: 1, column: 11] (through reference chain: com.paystore.model.PaymentDetail[\"idUser\"])","path":"/api/paystore/payment/history"}
2020-05-26 18:39:29 INFO  Config:81 - Assert status code...
2020-05-26 18:39:29 INFO  Config:83 - Success!
2020-05-26 18:39:29 INFO  Config:84 - Assert Content-Type...
2020-05-26 18:39:29 INFO  Config:86 - Success!
2020-05-26 18:39:29 INFO  Config:87 - Assert response body...
2020-05-26 18:39:29 INFO  Config:91 - Success!
2020-05-26 18:39:29 INFO  Config:37 - 
2020-05-26 18:39:29 INFO  Config:38 - 
2020-05-26 18:39:29 INFO  Config:39 - Test Case ID :TC_122 - Description :Test Get User Payment History API with invalid user id (empty)
2020-05-26 18:39:30 INFO  Config:52 - Status code => 404
2020-05-26 18:39:30 INFO  Config:53 - Content-type => application/json
2020-05-26 18:39:30 INFO  Config:54 - Response body => {"data":{},"message":"Payment not found","status":"404"}
2020-05-26 18:39:30 INFO  Config:94 - Assert status code...
2020-05-26 18:39:30 INFO  Config:96 - Success!
2020-05-26 18:39:30 INFO  Config:97 - Assert Content-Type...
2020-05-26 18:39:30 INFO  Config:99 - Success!
2020-05-26 18:39:30 INFO  Config:100 - Assert response body...
2020-05-26 18:39:30 INFO  Config:104 - Success!
2020-05-26 18:39:30 INFO  Config:22 - 
2020-05-26 18:39:30 INFO  Config:23 - =====TS_008 Logout=====
2020-05-26 18:39:30 INFO  Config:38 - 
2020-05-26 18:39:30 INFO  Config:39 - 
2020-05-26 18:39:30 INFO  Config:40 - Test Case ID :TC_118 - Description :Test Logout API with positive path (user already login)
2020-05-26 18:39:32 INFO  Config:54 - Status code => 200
2020-05-26 18:39:32 INFO  Config:55 - Content-type => application/json
2020-05-26 18:39:32 INFO  Config:56 - Response body => {"data":{},"message":"User has successfully logout","status":"200"}
2020-05-26 18:39:32 INFO  Config:59 - Assert status code...
2020-05-26 18:39:32 INFO  Config:61 - Success!
2020-05-26 18:39:32 INFO  Config:62 - Assert Content-Type...
2020-05-26 18:39:32 INFO  Config:64 - Success!
2020-05-26 18:39:32 INFO  Config:65 - Assert response body...
2020-05-26 18:39:32 INFO  Config:38 - 
2020-05-26 18:39:32 INFO  Config:39 - 
2020-05-26 18:39:32 INFO  Config:40 - Test Case ID :TC_119 - Description :Test Logout API if user already logout
2020-05-26 18:39:34 INFO  Config:54 - Status code => 404
2020-05-26 18:39:34 INFO  Config:55 - Content-type => application/json
2020-05-26 18:39:34 INFO  Config:56 - Response body => {"data":{},"message":"User is already logged out","status":"404"}
2020-05-26 18:39:34 INFO  Config:92 - Assert status code...
2020-05-26 18:39:34 INFO  Config:94 - Success!
2020-05-26 18:39:34 INFO  Config:95 - Assert Content-Type...
2020-05-26 18:39:34 INFO  Config:97 - Success!
2020-05-26 18:39:34 INFO  Config:98 - Assert response body...
2020-05-26 18:39:34 INFO  Config:38 - 
2020-05-26 18:39:34 INFO  Config:39 - 
2020-05-26 18:39:34 INFO  Config:40 - Test Case ID :TC_120 - Description :Test Logout API if user not exist
2020-05-26 18:39:36 INFO  Config:54 - Status code => 404
2020-05-26 18:39:36 INFO  Config:55 - Content-type => application/json
2020-05-26 18:39:36 INFO  Config:56 - Response body => {"data":{},"message":"User not found","status":"404"}
2020-05-26 18:39:36 INFO  Config:92 - Assert status code...
2020-05-26 18:39:36 INFO  Config:94 - Success!
2020-05-26 18:39:36 INFO  Config:95 - Assert Content-Type...
2020-05-26 18:39:36 INFO  Config:97 - Success!
2020-05-26 18:39:36 INFO  Config:98 - Assert response body...
2020-05-26 18:39:36 INFO  Config:102 - Success!
2020-05-26 18:39:36 INFO  Config:38 - 
2020-05-26 18:39:36 INFO  Config:39 - 
2020-05-26 18:39:36 INFO  Config:40 - Test Case ID :TC_121 - Description :Test Logout API with invalid user id (contain alphabet)
2020-05-26 18:39:38 INFO  Config:54 - Status code => 400
2020-05-26 18:39:38 INFO  Config:55 - Content-type => application/json
2020-05-26 18:39:38 INFO  Config:56 - Response body => {"timestamp":"2020-05-26T11:39:37.892+0000","status":400,"error":"Bad Request","message":"JSON parse error: Cannot deserialize value of type `long` from String \"a\": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `long` from String \"a\": not a valid Long value\n at [Source: (PushbackInputStream); line: 1, column: 11] (through reference chain: com.paystore.model.User[\"idUser\"])","path":"/api/paystore/user/logout"}
2020-05-26 18:39:38 INFO  Config:79 - Assert status code...
2020-05-26 18:39:38 INFO  Config:81 - Success!
2020-05-26 18:39:38 INFO  Config:82 - Assert Content-Type...
2020-05-26 18:39:38 INFO  Config:84 - Success!
2020-05-26 18:39:38 INFO  Config:85 - Assert response body...
2020-05-26 18:39:38 INFO  Config:89 - Success!
2020-05-26 18:39:38 INFO  Config:38 - 
2020-05-26 18:39:38 INFO  Config:39 - 
2020-05-26 18:39:38 INFO  Config:40 - Test Case ID :TC_122 - Description :Test Logout API with invalid user id (contain symbol)
2020-05-26 18:39:39 INFO  Config:54 - Status code => 400
2020-05-26 18:39:39 INFO  Config:55 - Content-type => application/json
2020-05-26 18:39:39 INFO  Config:56 - Response body => {"timestamp":"2020-05-26T11:39:39.221+0000","status":400,"error":"Bad Request","message":"JSON parse error: Cannot deserialize value of type `long` from String \"@\": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `long` from String \"@\": not a valid Long value\n at [Source: (PushbackInputStream); line: 1, column: 11] (through reference chain: com.paystore.model.User[\"idUser\"])","path":"/api/paystore/user/logout"}
2020-05-26 18:39:39 INFO  Config:79 - Assert status code...
2020-05-26 18:39:39 INFO  Config:81 - Success!
2020-05-26 18:39:39 INFO  Config:82 - Assert Content-Type...
2020-05-26 18:39:39 INFO  Config:84 - Success!
2020-05-26 18:39:39 INFO  Config:85 - Assert response body...
2020-05-26 18:39:39 INFO  Config:89 - Success!
2020-05-26 18:39:39 INFO  Config:38 - 
2020-05-26 18:39:39 INFO  Config:39 - 
2020-05-26 18:39:39 INFO  Config:40 - Test Case ID :TC_123 - Description :Test Logout API with invalid user id (empty)
2020-05-26 18:39:40 INFO  Config:54 - Status code => 404
2020-05-26 18:39:40 INFO  Config:55 - Content-type => application/json
2020-05-26 18:39:40 INFO  Config:56 - Response body => {"data":{},"message":"User not found","status":"404"}
2020-05-26 18:39:40 INFO  Config:92 - Assert status code...
2020-05-26 18:39:40 INFO  Config:94 - Success!
2020-05-26 18:39:40 INFO  Config:95 - Assert Content-Type...
2020-05-26 18:39:40 INFO  Config:97 - Success!
2020-05-26 18:39:40 INFO  Config:98 - Assert response body...
2020-05-26 18:39:40 INFO  Config:102 - Success!
2020-05-26 18:39:42 INFO  Config:23 - clean payment data...
2020-05-26 18:39:50 INFO  Config:27 - success!
2020-05-26 18:39:50 INFO  Config:28 - clean bill data...
2020-05-26 18:40:33 INFO  Config:32 - success!
2020-05-26 18:40:33 INFO  Config:33 - clean user data...
2020-05-26 18:40:34 INFO  Config:35 - success!
